{"version":3,"sources":["graph/DraggableGraphNode.tsx","graph/NodeAdder.tsx","graph/Connector.tsx","graph/NodeTypeButton.tsx","graph/NodeTypes.tsx","graph/Node.tsx","graph/Verb.tsx","graph/Option.tsx","graph/Line.tsx","graph/Lines.tsx","graph/ConnectorArrow.tsx","graph/GraphTab.tsx","ValidateStoryJson.ts","JsonTab.tsx","StoryUpdater.ts","NodeTrackerHelper.ts","types.ts","chat/Narrator.ts","chat/Chat.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DraggableGraphNode","props","ref","createRef","startDragging","e","current","setState","dragging","relX","pageX","offsetLeft","relY","pageY","offsetTop","stopDragging","drag","x","state","y","onUpdatePosition","width","height","clientWidth","clientHeight","this","nodeTrackers","length","reduce","acc","next","biggestX","biggestY","setTimeout","scrollIntoView","document","addEventListener","removeEventListener","children","className","classnames","style","left","top","onMouseDown","title","React","Component","NodeAdder","onClick","Connector","active","startDrawing","console","log","nodeTracker","id","drawLine","stopDrawing","overlappingNode","find","n","type","canCollideWith","onCollision","stopDrawingLine","mouseMove","drawFrom","y1","x1","x2","y2","NodeTypeButton","currentType","updateType","NodeTypes","startNode","node","updateNode","NodeComponent","addOption","removeNode","addOrUpdateNodeTracker","connectToOption","updatedX","updatedY","optionId","placeholder","value","statement","onChange","target","VerbComponent","verb","addVerb","disabled","Option","addNode","option","updateOption","removeOption","item","event","Verb","undefined","tasteId","touchId","smellId","lookId","listenId","Line","position","markerWidth","markerHeight","refX","refY","orient","markerUnits","d","fill","stroke","markerEnd","Lines","story","lines","calcLinesFromNodes","calcLinesFromStoryOptions","map","line","index","key","flatMap","trackedNode","options","o","stuff","push","makeOptionalOptionLine","filter","parentNodeTracker","found","makeOptionLine","nodes","what","optionIds","oid","makeLine","trackedOption","ConnectorArrow","drawing","GraphTab","updateTitle","lineCoordinates","showLine","Node","validateNode","Error","validateString","validateArray","forEach","validateOption","validateStringOrUndefined","thing","Array","isArray","JsonTab","validateJson","json","updatedJson","error","parsedJson","JSON","parse","validate","updateStory","stringify","prevProps","uuidv4","updatedNodes","optionIndex","findIndex","updatedOption","update","without","clearOptionOfRemovedNode","nodeId","updatedNode","updatedOptions","nodeIndex","uniq","removeNodeFromTracker","VERBS","aOrAn","word","firstLetter","head","includes","Narrator","currentNode","handleNonMatch","response","lookAroundDescription","getNext","words","split","verbOpt","findVerb","nounOpt","findNoun","handleMatch","noun","findNounById","stuffToDo","s","items","join","Chat","historyRef","enter","narrator","nextNode","history","botResponse","otherMessage","scrollTop","scrollHeight","i","humanStatement","botStatement","onKeyDown","App","tab","updateTab","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e06fa511.chunk.js","sourcesContent":["import React, { createRef, RefObject, ReactNode } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { NodeTracker } from \"../types\";\r\nimport { reduce } from \"ramda\";\r\n\r\ninterface DraggableGraphNodeProps {\r\n  children: ReactNode;\r\n  onUpdatePosition(x: number, y: number, width: number, height: number): void;\r\n  nodeTrackers: NodeTracker[];\r\n}\r\n\r\ninterface NextPosition {\r\n  biggestX: number;\r\n  biggestY: number;\r\n  height: number;\r\n}\r\n\r\ninterface DraggableGraphNodeState {\r\n  x: number;\r\n  y: number;\r\n  dragging: boolean;\r\n  relX: number;\r\n  relY: number;\r\n}\r\n\r\nclass DraggableGraphNode extends React.Component<\r\n  DraggableGraphNodeProps,\r\n  DraggableGraphNodeState\r\n> {\r\n  private ref: RefObject<HTMLDivElement> = createRef();\r\n  constructor(props: DraggableGraphNodeProps) {\r\n    super(props);\r\n    this.state = { x: 0, y: 0, dragging: false, relX: 0, relY: 0 };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    if (this.props.nodeTrackers.length === 0) {\r\n      this.props.onUpdatePosition(0, 0, this.width(), this.height());\r\n      return;\r\n    }\r\n\r\n    const { biggestX, biggestY, height } = reduce<NodeTracker, NextPosition>(\r\n      (acc: NextPosition, next: NodeTracker) => {\r\n        let biggestX = acc.biggestX;\r\n        let biggestY = acc.biggestY;\r\n        let height = acc.height;\r\n\r\n        if (next.y >= biggestY) {\r\n          biggestY = next.y;\r\n          height = next.height;\r\n        }\r\n\r\n        return { biggestX, biggestY, height };\r\n      },\r\n      { biggestX: 0, biggestY: 0, height: 0 }\r\n    )(this.props.nodeTrackers);\r\n\r\n    const x = biggestX;\r\n    const y = biggestY + height;\r\n\r\n    this.setState({ x, y });\r\n\r\n    this.props.onUpdatePosition(x, y, this.width(), this.height());\r\n    setTimeout(() => this.ref.current?.scrollIntoView());\r\n  }\r\n\r\n  public componentDidUpdate(\r\n    props: DraggableGraphNodeProps,\r\n    state: DraggableGraphNodeState\r\n  ) {\r\n    if (this.state.dragging && !state.dragging) {\r\n      document.addEventListener(\"mousemove\", this.drag);\r\n      document.addEventListener(\"mouseup\", this.stopDragging);\r\n    } else if (!this.state.dragging && state.dragging) {\r\n      document.removeEventListener(\"mousemove\", this.drag);\r\n      document.removeEventListener(\"mouseup\", this.stopDragging);\r\n    }\r\n  }\r\n\r\n  private startDragging = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (this.ref.current) {\r\n      this.setState({\r\n        dragging: true,\r\n        relX: e.pageX - this.ref.current.offsetLeft,\r\n        relY: e.pageY - this.ref.current.offsetTop\r\n      });\r\n    }\r\n  };\r\n\r\n  private stopDragging = () => {\r\n    this.setState({ dragging: false });\r\n  };\r\n\r\n  private drag = (e: MouseEvent) => {\r\n    const x = e.pageX - this.state.relX;\r\n    const y = e.pageY - this.state.relY;\r\n    if (this.state.dragging) {\r\n      this.setState({ x, y });\r\n      this.props.onUpdatePosition(x, y, this.width(), this.height());\r\n    }\r\n  };\r\n\r\n  private width = (): number => this.ref.current?.clientWidth || 0;\r\n  private height = (): number => this.ref.current?.clientHeight || 0;\r\n\r\n  public render() {\r\n    const { children } = this.props;\r\n    const { x, y, dragging } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={classnames(\"draggable-div\", {\r\n          \"draggable-div--dragging\": dragging\r\n        })}\r\n        style={{ left: `${x}px`, top: `${y}px` }}\r\n        ref={this.ref}\r\n      >\r\n        <div className=\"drag-wrapper\" onMouseDown={this.startDragging}>\r\n          <i className=\"fas fa-arrows-alt\" title=\"move node\"></i>\r\n        </div>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DraggableGraphNode;\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\ninterface NodeAdderProps {\r\n  onClick(): void;\r\n}\r\n\r\nconst NodeAdder: FunctionComponent<NodeAdderProps> = ({ onClick }) => (\r\n  <button className=\"button\" onClick={onClick} title=\"add node\">\r\n    <i className=\"fas fa-plus-circle\"></i>\r\n  </button>\r\n);\r\n\r\nexport default NodeAdder;\r\n","import React, { ReactNode } from \"react\";\r\nimport { NodeTracker, NodeTrackerType, LineCoordinates } from \"../types\";\r\n\r\ninterface ConnectorProps {\r\n  children: ReactNode;\r\n  nodeTracker: NodeTracker;\r\n  nodeTrackers: NodeTracker[];\r\n  drawFrom: \"bottom\" | \"top\";\r\n  canCollideWith: NodeTrackerType;\r\n  onCollision(id: string): void;\r\n  drawLine(lineCoordinates: LineCoordinates): void;\r\n  stopDrawingLine(): void;\r\n}\r\n\r\ninterface ConnectorState {\r\n  active: boolean;\r\n}\r\n\r\nclass Connector extends React.Component<ConnectorProps, ConnectorState> {\r\n  public state = { active: false };\r\n  public componentDidUpdate(props: ConnectorProps, state: ConnectorState) {\r\n    if (this.state.active && !state.active) {\r\n      document.addEventListener(\"mousemove\", this.mouseMove);\r\n      document.addEventListener(\"mouseup\", this.stopDrawing);\r\n    } else if (!this.state.active && state.active) {\r\n      document.removeEventListener(\"mousemove\", this.mouseMove);\r\n      document.removeEventListener(\"mouseup\", this.stopDrawing);\r\n    }\r\n  }\r\n\r\n  private startDrawing = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    console.log(this.props.nodeTracker.id);\r\n    this.setState({ active: true });\r\n    this.drawLine(e as any);\r\n  };\r\n\r\n  private stopDrawing = (e: MouseEvent) => {\r\n    this.setState({ active: false });\r\n\r\n    const overlappingNode = this.props.nodeTrackers.find(\r\n      n =>\r\n        n.id !== this.props.nodeTracker.id &&\r\n        n.type === this.props.canCollideWith &&\r\n        n.x < e.pageX &&\r\n        e.pageX < n.x + n.width &&\r\n        n.y < e.pageY &&\r\n        e.pageY < n.y + n.height\r\n    );\r\n    console.log(overlappingNode);\r\n\r\n    if (overlappingNode) {\r\n      this.props.onCollision(overlappingNode.id);\r\n    }\r\n    this.props.stopDrawingLine();\r\n  };\r\n\r\n  private mouseMove = (e: MouseEvent) => {\r\n    if (this.state.active) {\r\n      this.drawLine(e);\r\n    }\r\n  };\r\n\r\n  private drawLine = (e: MouseEvent) => {\r\n    const { drawFrom, nodeTracker } = this.props;\r\n    const y1 =\r\n      drawFrom === \"top\" ? nodeTracker.y : nodeTracker.y + nodeTracker.height;\r\n\r\n    this.props.drawLine({\r\n      x1: this.props.nodeTracker.x + this.props.nodeTracker.width / 2,\r\n      y1: y1,\r\n      x2: e.pageX,\r\n      y2: e.pageY\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    const { children } = this.props;\r\n\r\n    return <div onMouseDown={this.startDrawing}>{children}</div>;\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { NodeType } from \"../types\";\r\n\r\ninterface NodeTypeButtonProps {\r\n  type: NodeType;\r\n  currentType: NodeType;\r\n  updateType(type: NodeType): void;\r\n}\r\n\r\nconst NodeTypeButton: FunctionComponent<NodeTypeButtonProps> = ({\r\n  type,\r\n  currentType,\r\n  updateType\r\n}) => (\r\n  <button\r\n    className={classnames(\"node-type\", {\r\n      \"node-type--selected\": type === currentType\r\n    })}\r\n    onClick={() => updateType(type)}\r\n  >\r\n    {type}\r\n  </button>\r\n);\r\n\r\nexport default NodeTypeButton;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Node, NodeType } from \"../types\";\r\nimport NodeTypeButton from \"./NodeTypeButton\";\r\n\r\ninterface NodeTypes {\r\n  startNode: boolean;\r\n  node: Node;\r\n  updateNode(node: Node): void;\r\n}\r\n\r\nconst NodeTypes: FunctionComponent<NodeTypes> = ({\r\n  startNode,\r\n  node,\r\n  updateNode\r\n}) => {\r\n  const updateType = (type: NodeType) => updateNode({ ...node, type });\r\n\r\n  return (\r\n    <div className=\"node-type--wrapper\">\r\n      {!startNode && (\r\n        <NodeTypeButton\r\n          type=\"Win\"\r\n          currentType={node.type}\r\n          updateType={updateType}\r\n        />\r\n      )}\r\n      <NodeTypeButton\r\n        type=\"Normal\"\r\n        currentType={node.type}\r\n        updateType={updateType}\r\n      />\r\n      {!startNode && (\r\n        <NodeTypeButton\r\n          type=\"Death\"\r\n          currentType={node.type}\r\n          updateType={updateType}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NodeTypes;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Node, NodeTracker, LineCoordinates } from \"../types\";\r\n\r\nimport DraggableGraphNode from \"./DraggableGraphNode\";\r\nimport NodeAdder from \"./NodeAdder\";\r\nimport Connector from \"./Connector\";\r\nimport NodeTypes from \"./NodeTypes\";\r\n\r\ninterface NodeProps {\r\n  node: Node;\r\n  nodeTracker?: NodeTracker;\r\n  nodeTrackers: NodeTracker[];\r\n  startNode: boolean;\r\n  updateNode(node: Node): void;\r\n  removeNode(node: Node): void;\r\n  addOption(nodeId: string): void;\r\n  connectToOption(node: Node, optionId: string): void;\r\n  addOrUpdateNodeTracker(\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): void;\r\n\r\n  drawLine(lineCoordinates: LineCoordinates): void;\r\n  stopDrawingLine(): void;\r\n}\r\n\r\nconst NodeComponent: FunctionComponent<NodeProps> = ({\r\n  node,\r\n  updateNode,\r\n  addOption,\r\n  removeNode,\r\n  addOrUpdateNodeTracker,\r\n  nodeTracker,\r\n  nodeTrackers,\r\n  startNode,\r\n  connectToOption,\r\n  drawLine,\r\n  stopDrawingLine\r\n}) => (\r\n  <DraggableGraphNode\r\n    nodeTrackers={nodeTrackers}\r\n    onUpdatePosition={(updatedX, updatedY, width, height) =>\r\n      addOrUpdateNodeTracker(node.id, \"Node\", updatedX, updatedY, width, height)\r\n    }\r\n  >\r\n    <Connector\r\n      drawFrom=\"bottom\"\r\n      drawLine={drawLine}\r\n      stopDrawingLine={stopDrawingLine}\r\n      nodeTrackers={nodeTrackers}\r\n      nodeTracker={\r\n        nodeTracker || {\r\n          x: 0,\r\n          y: 0,\r\n          width: 0,\r\n          height: 0,\r\n          id: node.id,\r\n          type: \"Node\"\r\n        }\r\n      }\r\n      canCollideWith=\"StoryOption\"\r\n      onCollision={optionId => connectToOption(node, optionId)}\r\n    >\r\n      <div className=\"node\">\r\n        <textarea\r\n          placeholder=\"Add a statement e.g. You walk into a dark room.\"\r\n          value={node.statement}\r\n          onChange={e => updateNode({ ...node, statement: e.target.value })}\r\n        />\r\n        <NodeTypes updateNode={updateNode} node={node} startNode={startNode} />\r\n        {node.type === \"Normal\" && (\r\n          <NodeAdder onClick={() => addOption(node.id)} />\r\n        )}\r\n        {!startNode && (\r\n          <button\r\n            className=\"button\"\r\n            title=\"remove node\"\r\n            onClick={() => removeNode(node)}\r\n          >\r\n            <i className=\"fas fa-minus-circle\"></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Connector>\r\n  </DraggableGraphNode>\r\n);\r\nexport default NodeComponent;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Verb } from \"../types\";\r\nimport NodeAdder from \"./NodeAdder\";\r\n\r\ninterface VerbProps {\r\n  verb: Verb;\r\n  addVerb(verb: Verb): void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst VerbComponent: FunctionComponent<VerbProps> = ({\r\n  verb,\r\n  addVerb,\r\n  disabled\r\n}) => (\r\n  <div className=\"verb\">\r\n    <p>{verb}</p>\r\n    {!disabled && <NodeAdder onClick={() => addVerb(verb)} />}\r\n  </div>\r\n);\r\n\r\nexport default VerbComponent;\r\n","import React from \"react\";\r\nimport { StoryOption, Verb, NodeTracker } from \"../types\";\r\nimport DraggableGraphNode from \"./DraggableGraphNode\";\r\nimport VerbComponent from \"./Verb\";\r\n\r\ninterface OptionProps {\r\n  option: StoryOption;\r\n  updateOption(option: StoryOption): void;\r\n  removeOption(option: StoryOption): void;\r\n  addOrUpdateNodeTracker(\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): void;\r\n  addNode(option: StoryOption, verb: Verb): void;\r\n  nodeTrackers: NodeTracker[];\r\n}\r\n\r\nclass Option extends React.Component<OptionProps> {\r\n  private addNode = (verb: Verb) => this.props.addNode(this.props.option, verb);\r\n\r\n  public render() {\r\n    const {\r\n      option,\r\n      updateOption,\r\n      addOrUpdateNodeTracker,\r\n      removeOption,\r\n      nodeTrackers\r\n    } = this.props;\r\n    return (\r\n      <DraggableGraphNode\r\n        nodeTrackers={nodeTrackers}\r\n        onUpdatePosition={(updatedX, updatedY, width, height) =>\r\n          addOrUpdateNodeTracker(\r\n            option.id,\r\n            \"StoryOption\",\r\n            updatedX,\r\n            updatedY,\r\n            width,\r\n            height\r\n          )\r\n        }\r\n      >\r\n        <div className=\"option\">\r\n          <div className=\"option-top\">\r\n            <input\r\n              value={option.item}\r\n              placeholder=\"item to interact with e.g. book\"\r\n              onChange={event =>\r\n                updateOption({ ...option, item: event.target.value })\r\n              }\r\n            />\r\n            <div>\r\n              <button\r\n                className=\"button\"\r\n                title=\"remove node\"\r\n                onClick={() => removeOption(option)}\r\n              >\r\n                <i className=\"fas fa-minus-circle\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"verbs\">\r\n            <VerbComponent\r\n              verb=\"taste\"\r\n              addVerb={this.addNode}\r\n              disabled={option.tasteId !== undefined}\r\n            />\r\n            <VerbComponent\r\n              verb=\"touch\"\r\n              addVerb={this.addNode}\r\n              disabled={option.touchId !== undefined}\r\n            />\r\n            <VerbComponent\r\n              verb=\"smell\"\r\n              addVerb={this.addNode}\r\n              disabled={option.smellId !== undefined}\r\n            />\r\n            <VerbComponent\r\n              verb=\"look\"\r\n              addVerb={this.addNode}\r\n              disabled={option.lookId !== undefined}\r\n            />\r\n            <VerbComponent\r\n              verb=\"listen\"\r\n              addVerb={this.addNode}\r\n              disabled={option.listenId !== undefined}\r\n            />\r\n          </div>\r\n        </div>\r\n      </DraggableGraphNode>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Option;\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\ninterface LineProps {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n  position: \"fixed\" | \"absolute\";\r\n}\r\n\r\nconst Line: FunctionComponent<LineProps> = ({ x1, y1, x2, y2, position }) => (\r\n  <svg width=\"100%\" height=\"100%\" className=\"line-wrapper\" style={{ position }}>\r\n    <defs>\r\n      <marker\r\n        id=\"arrow\"\r\n        markerWidth=\"10\"\r\n        markerHeight=\"10\"\r\n        refX=\"8\"\r\n        refY=\"3\"\r\n        orient=\"auto\"\r\n        markerUnits=\"strokeWidth\"\r\n      >\r\n        <path d=\"M0,0 L0,6 L9,3 z\" fill=\"#c0ffe9\" />\r\n      </marker>\r\n    </defs>\r\n    <line\r\n      x1={x1}\r\n      y1={y1}\r\n      x2={x2}\r\n      y2={y2}\r\n      className=\"line\"\r\n      stroke=\"black\"\r\n      markerEnd=\"url(#arrow)\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default Line;\r\n","import React from \"react\";\r\nimport Line from \"./Line\";\r\nimport { NodeTracker, Story, Node } from \"../types\";\r\n\r\ninterface LinesProps {\r\n  nodeTracker: NodeTracker[];\r\n  story: Story;\r\n}\r\n\r\nclass Lines extends React.Component<LinesProps> {\r\n  public render() {\r\n    const { nodeTracker, story } = this.props;\r\n\r\n    const lines = [\r\n      ...calcLinesFromNodes(nodeTracker, story),\r\n      ...calcLinesFromStoryOptions(nodeTracker, story)\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        {lines.map((line, index) => (\r\n          <Line {...line} key={`line-${index}`} position=\"absolute\" />\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lines;\r\n\r\ninterface LineType {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n\r\nconst calcLinesFromStoryOptions = (\r\n  nodeTracker: NodeTracker[],\r\n  story: Story\r\n): LineType[] =>\r\n  nodeTracker\r\n    .flatMap(trackedNode => {\r\n      const option = story.options.find(o => o.id === trackedNode.id);\r\n      if (option) {\r\n        const stuff = [];\r\n        if (option.tasteId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.tasteId, nodeTracker, trackedNode, 0)\r\n          );\r\n        }\r\n\r\n        if (option.touchId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.touchId, nodeTracker, trackedNode, 1)\r\n          );\r\n        }\r\n\r\n        if (option.smellId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.smellId, nodeTracker, trackedNode, 2)\r\n          );\r\n        }\r\n        if (option.lookId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.lookId, nodeTracker, trackedNode, 3)\r\n          );\r\n        }\r\n        if (option.listenId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.listenId, nodeTracker, trackedNode, 4)\r\n          );\r\n        }\r\n\r\n        return stuff;\r\n      }\r\n    })\r\n    .filter(n => n !== undefined) as any;\r\n\r\nconst makeOptionalOptionLine = (\r\n  id: string,\r\n  nodeTracker: NodeTracker[],\r\n  parentNodeTracker: NodeTracker,\r\n  index: number\r\n): LineType | undefined => {\r\n  const found = nodeTracker.find(n => n.id === id);\r\n  return found ? makeOptionLine(parentNodeTracker, found, index) : undefined;\r\n};\r\n\r\nconst calcLinesFromNodes = (\r\n  nodeTracker: NodeTracker[],\r\n  story: Story\r\n): LineType[] =>\r\n  nodeTracker\r\n    .flatMap(trackedNode => {\r\n      const node = story.nodes.find(n => n.id === trackedNode.id);\r\n      if (node) {\r\n        return what(nodeTracker, node, trackedNode);\r\n      }\r\n    })\r\n    .filter(n => n !== undefined) as any;\r\n\r\nconst what = (\r\n  nodeTracker: NodeTracker[],\r\n  node: Node,\r\n  trackedNode: NodeTracker\r\n): LineType[] => {\r\n  const options: NodeTracker[] = node.optionIds\r\n    .map(oid => nodeTracker.find(n => n.id === oid))\r\n    .filter(n => n !== undefined) as any;\r\n  return options.map(o => makeLine(trackedNode, o));\r\n};\r\n\r\nconst makeLine = (trackedNode: NodeTracker, trackedOption: NodeTracker) => ({\r\n  x1: trackedNode.x + trackedNode.width / 2,\r\n  y1: trackedNode.y + trackedNode.height,\r\n  x2: trackedOption.x + trackedOption.width / 2,\r\n  y2: trackedOption.y\r\n});\r\n\r\nconst makeOptionLine = (\r\n  trackedNode: NodeTracker,\r\n  trackedOption: NodeTracker,\r\n  index: number\r\n) => ({\r\n  x1: trackedNode.x + (index / 5) * trackedNode.width + 0.1 * trackedNode.width,\r\n  y1: trackedNode.y + trackedNode.height,\r\n  x2: trackedOption.x + trackedOption.width / 2,\r\n  y2: trackedOption.y\r\n});\r\n","import React, { FunctionComponent } from \"react\";\r\nimport Line from \"./Line\";\r\n\r\ninterface ConnectorArrowProps {\r\n  drawing: boolean;\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n\r\nconst ConnectorArrow: FunctionComponent<ConnectorArrowProps> = ({\r\n  drawing,\r\n  x1,\r\n  y1,\r\n  x2,\r\n  y2\r\n}) => (\r\n  <>{drawing && <Line position=\"absolute\" x1={x1} y1={y1} x2={x2} y2={y2} />}</>\r\n);\r\n\r\nexport default ConnectorArrow;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport {\r\n  Story,\r\n  Node,\r\n  StoryOption,\r\n  NodeTracker,\r\n  Verb,\r\n  LineCoordinates\r\n} from \"../types\";\r\nimport NodeComponent from \"./Node\";\r\nimport Option from \"./Option\";\r\n\r\nimport \"./graph.css\";\r\nimport Lines from \"./Lines\";\r\nimport ConnectorArrow from \"./ConnectorArrow\";\r\n\r\ninterface GraphTabProps {\r\n  story: Story;\r\n  nodeTrackers: NodeTracker[];\r\n  updateTitle(title: string): void;\r\n  updateNode(node: Node): void;\r\n  removeNode(node: Node): void;\r\n  removeOption(option: StoryOption): void;\r\n  addOption(nodeId: string): void;\r\n  addNode(option: StoryOption, verb: Verb): void;\r\n  updateOption(option: StoryOption): void;\r\n  connectToOption(node: Node, optionId: string): void;\r\n  drawLine(lineCoordinates: LineCoordinates): void;\r\n  stopDrawingLine(): void;\r\n  addOrUpdateNodeTracker(\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): void;\r\n  lineCoordinates: LineCoordinates;\r\n  showLine: boolean;\r\n}\r\n\r\nconst GraphTab: FunctionComponent<GraphTabProps> = ({\r\n  story,\r\n  nodeTrackers,\r\n  updateTitle,\r\n  updateNode,\r\n  connectToOption,\r\n  updateOption,\r\n  addOrUpdateNodeTracker,\r\n  addOption,\r\n  removeOption,\r\n  addNode,\r\n  removeNode,\r\n  lineCoordinates,\r\n  showLine,\r\n  drawLine,\r\n  stopDrawingLine\r\n}) => (\r\n  <div>\r\n    <input\r\n      value={story.title}\r\n      className=\"title\"\r\n      placeholder=\"Title\"\r\n      onChange={event => updateTitle(event.target.value)}\r\n    />\r\n    {story.nodes.map((node, index) => (\r\n      <NodeComponent\r\n        key={node.id}\r\n        nodeTracker={nodeTrackers.find(n => n.id === node.id)}\r\n        nodeTrackers={nodeTrackers}\r\n        node={node}\r\n        addOption={addOption}\r\n        updateNode={updateNode}\r\n        removeNode={removeNode}\r\n        addOrUpdateNodeTracker={addOrUpdateNodeTracker}\r\n        connectToOption={connectToOption}\r\n        drawLine={drawLine}\r\n        stopDrawingLine={stopDrawingLine}\r\n        startNode={index === 0}\r\n      />\r\n    ))}\r\n\r\n    {story.options.map(option => (\r\n      <Option\r\n        option={option}\r\n        key={option.id}\r\n        updateOption={updateOption}\r\n        removeOption={removeOption}\r\n        addOrUpdateNodeTracker={addOrUpdateNodeTracker}\r\n        addNode={addNode}\r\n        nodeTrackers={nodeTrackers}\r\n      />\r\n    ))}\r\n    <Lines story={story} nodeTracker={nodeTrackers} />\r\n    <ConnectorArrow drawing={showLine} {...lineCoordinates} />\r\n  </div>\r\n);\r\n\r\nexport default GraphTab;\r\n","export const validate = (json: any) => {\r\n  console.log(json);\r\n  validateString(json.title);\r\n  validateArray(json.nodes);\r\n  validateArray(json.options);\r\n\r\n  json.nodes.forEach(validateNode);\r\n  json.options.forEach(validateOption);\r\n};\r\n\r\nconst validateNode = (node: any) => {\r\n  if (node === undefined || node === null) {\r\n    throw new Error(\"Missing node\");\r\n  }\r\n\r\n  validateString(node.id);\r\n  validateString(node.statement);\r\n\r\n  if (node.type !== \"Normal\" && node.type !== \"Win\" && node.type !== \"Death\") {\r\n    throw new Error(\"bad node type\");\r\n  }\r\n\r\n  validateArray(node.optionIds);\r\n\r\n  node.optionIds.forEach(validateString);\r\n};\r\n\r\nconst validateOption = (option: any) => {\r\n  validateString(option.id);\r\n  validateString(option.item);\r\n  validateStringOrUndefined(option.tasteId);\r\n  validateStringOrUndefined(option.touchId);\r\n  validateStringOrUndefined(option.smellId);\r\n  validateStringOrUndefined(option.lookId);\r\n  validateStringOrUndefined(option.listenId);\r\n};\r\n\r\nconst validateStringOrUndefined = (thing: any) => {\r\n  if (thing === undefined) {\r\n    return;\r\n  }\r\n  validateString(thing);\r\n};\r\nconst validateString = (thing: any) => {\r\n  if (typeof thing !== \"string\") {\r\n    throw new Error(\"not a string\");\r\n  }\r\n};\r\nconst validateArray = (thing: any) => {\r\n  if (!Array.isArray(thing)) {\r\n    throw new Error(\"not an array\");\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Story } from \"./types\";\r\nimport { validate } from \"./ValidateStoryJson\";\r\nimport classnames from \"classnames\";\r\ninterface JsonTabProps {\r\n  story: Story;\r\n  updateStory(story: Story): void;\r\n}\r\n\r\ninterface JsonTabState {\r\n  error: boolean;\r\n  updatedJson: string;\r\n}\r\n\r\nclass JsonTab extends React.Component<JsonTabProps, JsonTabState> {\r\n  constructor(props: JsonTabProps) {\r\n    super(props);\r\n    this.state = { error: false, updatedJson: JSON.stringify(props.story) };\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: JsonTabProps) {\r\n    if (prevProps.story !== this.props.story) {\r\n      this.setState({\r\n        error: false,\r\n        updatedJson: JSON.stringify(this.props.story)\r\n      });\r\n    }\r\n  }\r\n  private validateJson = (json: string) => {\r\n    this.setState({ updatedJson: json, error: false });\r\n    try {\r\n      const parsedJson = JSON.parse(json);\r\n      validate(parsedJson);\r\n      this.props.updateStory(parsedJson);\r\n    } catch (e) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const { error, updatedJson } = this.state;\r\n    return (\r\n      <div className=\"json-tab\">\r\n        <p\r\n          className={classnames(\"valid-checker\", {\r\n            \"valid-checker--valid\": !error\r\n          })}\r\n        >\r\n          Valid {error && <i className=\"fas fa-times-circle\" />}\r\n          {!error && <i className=\"fas fa-check-circle\" />}\r\n        </p>\r\n        <div className=\"json-wrapper\">\r\n          <textarea\r\n            className=\"json--text-area\"\r\n            value={updatedJson}\r\n            onChange={e => this.validateJson(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JsonTab;\r\n","import { Story, Node, StoryOption, Verb } from \"./types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { update, without, uniq } from \"ramda\";\r\n\r\nexport const addNode = (\r\n  story: Story,\r\n  option: StoryOption,\r\n  verb: Verb\r\n): Story => {\r\n  const nodes = story.nodes;\r\n  const id = uuidv4();\r\n  const updatedNodes: Node[] = [\r\n    ...nodes,\r\n    { type: \"Normal\", statement: \"\", id, optionIds: [] }\r\n  ];\r\n\r\n  const optionIndex = story.options.findIndex(o => o.id === option.id);\r\n  const updatedOption: StoryOption = {\r\n    ...option,\r\n    ...(verb === \"taste\" && { tasteId: id }),\r\n    ...(verb === \"touch\" && { touchId: id }),\r\n    ...(verb === \"listen\" && { listenId: id }),\r\n    ...(verb === \"look\" && { lookId: id }),\r\n    ...(verb === \"smell\" && { smellId: id })\r\n  };\r\n\r\n  const options = update(optionIndex, updatedOption, story.options);\r\n\r\n  return { ...story, nodes: updatedNodes, options };\r\n};\r\n\r\nexport const removeNode = (story: Story, node: Node): Story => {\r\n  const updatedNodes = without([node], story.nodes);\r\n  const options = story.options.map(o => {\r\n    return {\r\n      ...o,\r\n      tasteId: clearOptionOfRemovedNode(node, o.tasteId),\r\n      touchId: clearOptionOfRemovedNode(node, o.touchId),\r\n      smellId: clearOptionOfRemovedNode(node, o.smellId),\r\n      listenId: clearOptionOfRemovedNode(node, o.listenId),\r\n      lookId: clearOptionOfRemovedNode(node, o.lookId)\r\n    };\r\n  });\r\n  return { ...story, nodes: updatedNodes, options };\r\n};\r\n\r\nexport const removeOption = (story: Story, option: StoryOption): Story => {\r\n  const options = without([option], story.options);\r\n  const nodes = story.nodes.map(n => ({\r\n    ...n,\r\n    optionIds: n.optionIds.filter(id => id !== option.id)\r\n  }));\r\n  return { ...story, nodes, options };\r\n};\r\n\r\nconst clearOptionOfRemovedNode = (node: Node, optionId: string | undefined) =>\r\n  optionId === node.id ? undefined : optionId;\r\n\r\nexport const addOption = (story: Story, nodeId: string): Story => {\r\n  const optionId = uuidv4();\r\n  const options = story.options;\r\n  const node = story.nodes.find(n => n.id === nodeId)!!; // TODO\r\n  const updatedNode = { ...node, optionIds: [...node.optionIds, optionId] };\r\n  const updatedOptions = [...options, { id: optionId, item: \"\" }];\r\n  return { ...updateNode(story, updatedNode), options: updatedOptions };\r\n};\r\n\r\nexport const updateNode = (story: Story, node: Node): Story => {\r\n  const nodes = story.nodes;\r\n  const nodeIndex = nodes.findIndex(n => n.id === node.id);\r\n  const updatedNodes = update(nodeIndex, node, nodes);\r\n  return { ...story, nodes: updatedNodes };\r\n};\r\n\r\nexport const updateOption = (story: Story, option: StoryOption): Story => {\r\n  const options = story.options;\r\n  const index = options.findIndex(o => o.id === option.id);\r\n  const updatedOptions = update(index, option, options);\r\n  return { ...story, options: updatedOptions };\r\n};\r\n\r\nexport const connectToOption = (story: Story, node: Node, optionId: string) => {\r\n  const updatedNode = {\r\n    ...node,\r\n    optionIds: uniq([...node.optionIds, optionId])\r\n  };\r\n\r\n  return { ...updateNode(story, updatedNode) };\r\n};\r\n","import { NodeTracker } from \"./types\";\r\n\r\nexport const removeNodeFromTracker = (\r\n  nodeTracker: NodeTracker[],\r\n  id: string\r\n): NodeTracker[] => nodeTracker.filter(n => n.id !== id);\r\n","export type NodeType = \"Normal\" | \"Win\" | \"Death\";\r\n\r\nexport interface Node {\r\n  id: string;\r\n  statement: string;\r\n  optionIds: string[];\r\n  type: NodeType;\r\n}\r\n\r\nexport interface StoryOption {\r\n  id: string;\r\n  item: string;\r\n  tasteId?: string;\r\n  touchId?: string;\r\n  smellId?: string;\r\n  lookId?: string;\r\n  listenId?: string;\r\n}\r\n\r\nexport interface Story {\r\n  title: string;\r\n  nodes: Node[];\r\n  options: StoryOption[];\r\n}\r\n\r\nexport type NodeTrackerType = \"Node\" | \"StoryOption\";\r\n\r\nexport interface NodeTracker {\r\n  id: string;\r\n  type: NodeTrackerType;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface LineCoordinates {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n\r\nexport type Verb = \"taste\" | \"touch\" | \"smell\" | \"look\" | \"listen\";\r\nexport const VERBS: Verb[] = [\"taste\", \"touch\", \"smell\", \"look\", \"listen\"];\r\n","import { Story, Verb, VERBS, Node, StoryOption } from \"../types\";\r\nimport { head } from \"ramda\";\r\n\r\nclass Narrator {\r\n  constructor(private story: Story, private currentNode: Node) {}\r\n\r\n  public handleNonMatch = (response: string): string => {\r\n    if (response.includes(\"help\")) {\r\n      return \"TODO: helpful message.\";\r\n    }\r\n\r\n    if (response.includes(\"look around\")) {\r\n      return this.lookAroundDescription();\r\n    }\r\n\r\n    return \"I don't understand.\";\r\n  };\r\n\r\n  public getNext = (response: string): Node | undefined => {\r\n    const words = response.split(\" \");\r\n\r\n    const verbOpt = this.findVerb(words);\r\n    const nounOpt = this.findNoun(words);\r\n\r\n    if (verbOpt !== undefined && nounOpt !== undefined) {\r\n      return this.handleMatch(verbOpt, nounOpt);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  private handleMatch = (verb: Verb, noun: StoryOption): Node | undefined => {\r\n    switch (verb) {\r\n      case \"listen\":\r\n        return this.findNounById(noun.listenId);\r\n      case \"look\":\r\n        return this.findNounById(noun.lookId);\r\n      case \"smell\":\r\n        return this.findNounById(noun.smellId);\r\n      case \"taste\":\r\n        return this.findNounById(noun.tasteId);\r\n      case \"touch\":\r\n        return this.findNounById(noun.touchId);\r\n    }\r\n  };\r\n\r\n  private findNounById = (id?: string) =>\r\n    this.story.nodes.find(n => n.id === id);\r\n\r\n  private stuffToDo = (): StoryOption[] =>\r\n    this.story.options.filter(option =>\r\n      this.currentNode.optionIds.includes(option.id)\r\n    );\r\n\r\n  private findVerb = (words: string[]): Verb | undefined =>\r\n    VERBS.find(verb => words.includes(verb));\r\n\r\n  private findNoun = (words: string[]): StoryOption | undefined =>\r\n    this.stuffToDo().find(s => words.includes(s.item));\r\n\r\n  private lookAroundDescription = (): string => {\r\n    const items = this.stuffToDo()\r\n      .map(stuff => `${aOrAn(stuff.item)} ${stuff.item}`)\r\n      .join(\" and \");\r\n    return `You can see ${items}.`;\r\n  };\r\n}\r\n\r\nconst aOrAn = (word: string): string => {\r\n  const vowels = \"aeiou\";\r\n  const firstLetter = head(word);\r\n\r\n  if (vowels.includes(firstLetter)) {\r\n    return \"an\";\r\n  }\r\n  return \"a\";\r\n};\r\n\r\nexport default Narrator;\r\n","import React, { createRef, RefObject, Fragment } from \"react\";\r\nimport { Story, Node } from \"../types\";\r\nimport Narrator from \"./Narrator\";\r\nimport classnames from \"classnames\";\r\n\r\nimport \"./Chat.css\";\r\n\r\ninterface ChatProps {\r\n  story: Story;\r\n}\r\n\r\ninterface ChatState {\r\n  currentNode: Node;\r\n  response: string;\r\n  otherMessage?: string;\r\n  history: string[][];\r\n}\r\n\r\nclass Chat extends React.Component<ChatProps, ChatState> {\r\n  private historyRef: RefObject<HTMLDivElement> = createRef();\r\n\r\n  constructor(props: ChatProps) {\r\n    super(props);\r\n    this.state = {\r\n      currentNode: props.story.nodes[0],\r\n      response: \"\",\r\n      history: [[\"\", props.story.nodes[0].statement]]\r\n    };\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: ChatProps) {\r\n    if (prevProps.story !== this.props.story) {\r\n      this.setState({\r\n        currentNode: this.props.story.nodes[0],\r\n        response: \"\",\r\n        otherMessage: undefined,\r\n        history: [[\"\", this.props.story.nodes[0].statement]]\r\n      });\r\n    }\r\n  }\r\n\r\n  private enter = () => {\r\n    const narrator = new Narrator(this.props.story, this.state.currentNode);\r\n    const nextNode = narrator.getNext(this.state.response);\r\n\r\n    if (nextNode !== undefined) {\r\n      const history = [\r\n        ...this.state.history,\r\n        [this.state.response, nextNode.statement]\r\n      ];\r\n\r\n      this.setState({\r\n        currentNode: nextNode,\r\n        response: \"\",\r\n        history\r\n      });\r\n    } else {\r\n      const botResponse = narrator.handleNonMatch(this.state.response);\r\n      const history = [\r\n        ...this.state.history,\r\n        [this.state.response, botResponse]\r\n      ];\r\n\r\n      this.setState({ otherMessage: botResponse, response: \"\", history });\r\n    }\r\n    setTimeout(() => {\r\n      if (this.historyRef.current) {\r\n        this.historyRef.current.scrollTop = this.historyRef.current.scrollHeight;\r\n      }\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    const { story } = this.props;\r\n    const { response, history } = this.state;\r\n    return (\r\n      <div className=\"chat\">\r\n        <h1>{story.title}</h1>\r\n        <div className=\"history-book\">\r\n          <div className=\"history-book--inner\" ref={this.historyRef}>\r\n            {history.map(([humanStatement, botStatement], i) => (\r\n              <Fragment key={`history--${i}`}>\r\n                <p className=\"human-statement\">{humanStatement}</p>\r\n                <p\r\n                  className={classnames(\"bot-statement\", {\r\n                    \"current-node\": i + 1 === history.length\r\n                  })}\r\n                >\r\n                  {botStatement}\r\n                </p>\r\n              </Fragment>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <input\r\n          value={response}\r\n          className=\"chat--input\"\r\n          onChange={e =>\r\n            this.setState({ response: e.target.value, otherMessage: \"\" })\r\n          }\r\n          onKeyDown={e => (e.key === \"Enter\" ? this.enter() : undefined)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  Story,\r\n  Node,\r\n  StoryOption,\r\n  NodeTracker,\r\n  Verb,\r\n  LineCoordinates\r\n} from \"./types\";\r\nimport GraphTab from \"./graph/GraphTab\";\r\nimport JsonTab from \"./JsonTab\";\r\nimport { update } from \"ramda\";\r\nimport {\r\n  addNode,\r\n  updateNode,\r\n  addOption,\r\n  updateOption,\r\n  removeNode,\r\n  removeOption,\r\n  connectToOption\r\n} from \"./StoryUpdater\";\r\nimport { removeNodeFromTracker } from \"./NodeTrackerHelper\";\r\nimport Chat from \"./chat/Chat\";\r\n\r\ninterface AppState {\r\n  tab: \"graph\" | \"json\" | \"chat\";\r\n  story: Story;\r\n  nodeTracker: NodeTracker[];\r\n  showLine: boolean;\r\n  lineCoordinates: {\r\n    x1: number;\r\n    y1: number;\r\n    x2: number;\r\n    y2: number;\r\n  };\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n  public state: AppState = {\r\n    tab: \"graph\",\r\n    story: {\r\n      title: \"\",\r\n      nodes: [\r\n        { statement: \"\", type: \"Normal\", optionIds: [], id: \"first-node\" }\r\n      ],\r\n      options: []\r\n    },\r\n    nodeTracker: [],\r\n    showLine: false,\r\n    lineCoordinates: { x1: 0, y1: 0, x2: 0, y2: 0 }\r\n  };\r\n\r\n  private updateTab = (tab: \"graph\" | \"json\" | \"chat\") =>\r\n    this.setState({ tab });\r\n  private updateTitle = (title: string) =>\r\n    this.setState({ story: { ...this.state.story, title } });\r\n  private updateNode = (node: Node) => {\r\n    this.setState({ story: updateNode(this.state.story, node) });\r\n  };\r\n\r\n  private addOrUpdateNodeTracker = (\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ) => {\r\n    const { nodeTracker } = this.state;\r\n    const index = nodeTracker.findIndex(n => n.id === id);\r\n    const node = { id, x, y, type, width, height };\r\n    if (index === -1) {\r\n      this.setState({ nodeTracker: [...nodeTracker, node] });\r\n    } else {\r\n      this.setState({ nodeTracker: update(index, node, nodeTracker) });\r\n    }\r\n  };\r\n\r\n  private addNode = (option: StoryOption, verb: Verb) => {\r\n    this.setState({ story: addNode(this.state.story, option, verb) });\r\n  };\r\n\r\n  private removeNode = (node: Node) => {\r\n    this.setState({\r\n      story: removeNode(this.state.story, node),\r\n      nodeTracker: removeNodeFromTracker(this.state.nodeTracker, node.id)\r\n    });\r\n  };\r\n\r\n  private removeOption = (option: StoryOption) => {\r\n    this.setState({\r\n      story: removeOption(this.state.story, option),\r\n      nodeTracker: removeNodeFromTracker(this.state.nodeTracker, option.id)\r\n    });\r\n  };\r\n  private addOption = (nodeId: string) => {\r\n    this.updateStory(addOption(this.state.story, nodeId));\r\n  };\r\n\r\n  private updateOption = (option: StoryOption) => {\r\n    this.updateStory(updateOption(this.state.story, option));\r\n  };\r\n\r\n  private updateStory = (story: Story) => this.setState({ story });\r\n\r\n  private connectToOption = (node: Node, optionId: string) => {\r\n    this.updateStory(connectToOption(this.state.story, node, optionId));\r\n  };\r\n\r\n  private drawLine = (lineCoordinates: LineCoordinates) =>\r\n    this.setState({ showLine: true, lineCoordinates });\r\n  private stopDrawingLine = () => this.setState({ showLine: false });\r\n\r\n  public render() {\r\n    const { tab, story, nodeTracker, showLine, lineCoordinates } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"tab-switcher\">\r\n          <button\r\n            className=\"switcher\"\r\n            title=\"graph\"\r\n            onClick={() => this.updateTab(\"graph\")}\r\n          >\r\n            <i className=\"fas fa-sitemap\" />\r\n          </button>\r\n          <button\r\n            className=\"switcher\"\r\n            title=\"json\"\r\n            onClick={() => this.updateTab(\"json\")}\r\n          >\r\n            <i className=\"far fa-file\" />\r\n          </button>\r\n          <button\r\n            className=\"switcher\"\r\n            title=\"chat\"\r\n            onClick={() => this.updateTab(\"chat\")}\r\n          >\r\n            <i className=\"fas fa-robot\" />\r\n          </button>\r\n        </div>\r\n        <div className={tab === \"graph\" ? \"\" : \"tab--hidden\"}>\r\n          <GraphTab\r\n            story={story}\r\n            nodeTrackers={nodeTracker}\r\n            updateTitle={this.updateTitle}\r\n            updateNode={this.updateNode}\r\n            removeNode={this.removeNode}\r\n            removeOption={this.removeOption}\r\n            addOption={this.addOption}\r\n            addNode={this.addNode}\r\n            updateOption={this.updateOption}\r\n            connectToOption={this.connectToOption}\r\n            addOrUpdateNodeTracker={this.addOrUpdateNodeTracker}\r\n            showLine={showLine}\r\n            lineCoordinates={lineCoordinates}\r\n            drawLine={this.drawLine}\r\n            stopDrawingLine={this.stopDrawingLine}\r\n          />\r\n        </div>\r\n        <div className={tab === \"json\" ? \"\" : \"tab--hidden\"}>\r\n          <JsonTab story={story} updateStory={this.updateStory} />\r\n        </div>\r\n        <div className={tab === \"chat\" ? \"\" : \"tab--hidden\"}>\r\n          <Chat story={story} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}