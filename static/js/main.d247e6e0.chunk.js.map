{"version":3,"sources":["graph/DraggableDiv.tsx","graph/NodeAdder.tsx","graph/NodeTypeButton.tsx","graph/Node.tsx","graph/Verb.tsx","graph/Option.tsx","graph/Line.tsx","graph/Lines.tsx","graph/GraphTab.tsx","ValidateStoryJson.ts","JsonTab.tsx","StoryUpdater.ts","NodeTrackerHelper.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["DraggableDiv","props","ref","createRef","startDragging","e","current","setState","dragging","relX","pageX","offsetLeft","relY","pageY","offsetTop","stopDragging","drag","x","state","y","onUpdatePosition","width","height","clientWidth","clientHeight","this","document","addEventListener","removeEventListener","children","className","classnames","style","left","top","onMouseDown","title","React","Component","NodeAdder","onClick","NodeTypeButton","type","currentType","updateType","NodeComponent","node","updateNode","addOption","removeNode","addOrUpdateNodeTracker","startNode","updatedX","updatedY","id","placeholder","value","statement","onChange","target","VerbComponent","verb","addVerb","disabled","Option","addNode","option","updateOption","removeOption","item","event","Verb","undefined","tasteId","touchId","smellId","lookId","listenId","Line","x1","y1","x2","y2","stroke","Lines","nodeTracker","story","lines","calcLinesFromNodes","otherLines","calcLinesFromStoryOptions","map","line","index","key","flatMap","trackedNode","options","find","o","stuff","push","makeOptionalOptionLine","filter","n","parentNodeTracker","found","makeOptionLine","nodes","what","optionIds","oid","makeLine","trackedOption","GraphTab","updateTitle","Node","validateNode","Error","validateString","validateArray","forEach","validateOption","validateStringOrUndefined","thing","Array","isArray","JsonTab","validateJson","json","updatedJson","error","parsedJson","JSON","parse","console","log","validate","updateStory","stringify","prevProps","uuidv4","updatedNodes","optionIndex","findIndex","updatedOption","update","without","clearOptionOfRemovedNode","optionId","nodeId","updatedNode","updatedOptions","nodeIndex","removeNodeFromTracker","App","tab","updateTab","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d247e6e0.chunk.js","sourcesContent":["import React, { createRef, RefObject, ReactNode } from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\ninterface DraggableDivProps {\r\n  x: number;\r\n  y: number;\r\n  children: ReactNode;\r\n  onUpdatePosition(x: number, y: number, width: number, height: number): void;\r\n}\r\n\r\ninterface DraggableDivState {\r\n  x: number;\r\n  y: number;\r\n  dragging: boolean;\r\n  relX: number;\r\n  relY: number;\r\n}\r\n\r\nclass DraggableDiv extends React.Component<\r\n  DraggableDivProps,\r\n  DraggableDivState\r\n> {\r\n  private ref: RefObject<HTMLDivElement> = createRef();\r\n  constructor(props: DraggableDivProps) {\r\n    super(props);\r\n    this.state = { x: props.x, y: props.y, dragging: false, relX: 0, relY: 0 };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.props.onUpdatePosition(\r\n      this.props.x,\r\n      this.props.y,\r\n      this.width(),\r\n      this.height()\r\n    );\r\n  }\r\n\r\n  public componentDidUpdate(\r\n    props: DraggableDivProps,\r\n    state: DraggableDivState\r\n  ) {\r\n    if (this.state.dragging && !state.dragging) {\r\n      document.addEventListener(\"mousemove\", this.drag);\r\n      document.addEventListener(\"mouseup\", this.stopDragging);\r\n    } else if (!this.state.dragging && state.dragging) {\r\n      document.removeEventListener(\"mousemove\", this.drag);\r\n      document.removeEventListener(\"mouseup\", this.stopDragging);\r\n    }\r\n  }\r\n\r\n  private startDragging = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (this.ref.current) {\r\n      this.setState({\r\n        dragging: true,\r\n        relX: e.pageX - this.ref.current.offsetLeft,\r\n        relY: e.pageY - this.ref.current.offsetTop\r\n      });\r\n    }\r\n  };\r\n\r\n  private stopDragging = () => {\r\n    this.setState({ dragging: false });\r\n  };\r\n\r\n  private drag = (e: MouseEvent) => {\r\n    const x = e.pageX - this.state.relX;\r\n    const y = e.pageY - this.state.relY;\r\n    if (this.state.dragging) {\r\n      this.setState({ x, y });\r\n      this.props.onUpdatePosition(x, y, this.width(), this.height());\r\n    }\r\n  };\r\n\r\n  private width = (): number => this.ref.current?.clientWidth || 0;\r\n  private height = (): number => this.ref.current?.clientHeight || 0;\r\n\r\n  public render() {\r\n    const { children } = this.props;\r\n    const { x, y, dragging } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={classnames(\"draggable-div\", {\r\n          \"draggable-div--dragging\": dragging\r\n        })}\r\n        style={{ left: `${x}px`, top: `${y}px` }}\r\n        ref={this.ref}\r\n      >\r\n        <div className=\"drag-wrapper\" onMouseDown={this.startDragging}>\r\n          <i className=\"fas fa-arrows-alt\" title=\"move node\"></i>\r\n        </div>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DraggableDiv;\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\ninterface NodeAdderProps {\r\n  onClick(): void;\r\n}\r\n\r\nconst NodeAdder: FunctionComponent<NodeAdderProps> = ({ onClick }) => (\r\n  <button className=\"button\" onClick={onClick} title=\"add node\">\r\n    <i className=\"fas fa-plus-circle\"></i>\r\n  </button>\r\n);\r\n\r\nexport default NodeAdder;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { NodeType } from \"../types\";\r\n\r\ninterface NodeTypeButtonProps {\r\n  type: NodeType;\r\n  currentType: NodeType;\r\n  updateType(type: NodeType): void;\r\n}\r\n\r\nconst NodeTypeButton: FunctionComponent<NodeTypeButtonProps> = ({\r\n  type,\r\n  currentType,\r\n  updateType\r\n}) => (\r\n  <button\r\n    className={classnames(\"node-type\", {\r\n      \"node-type--selected\": type === currentType\r\n    })}\r\n    onClick={() => updateType(type)}\r\n  >\r\n    {type}\r\n  </button>\r\n);\r\n\r\nexport default NodeTypeButton;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { Node, NodeType } from \"../types\";\r\n\r\nimport DraggableDiv from \"./DraggableDiv\";\r\nimport NodeAdder from \"./NodeAdder\";\r\nimport NodeTypeButton from \"./NodeTypeButton\";\r\n\r\ninterface NodeProps {\r\n  node: Node;\r\n  startNode: boolean;\r\n  updateNode(node: Node): void;\r\n  removeNode(node: Node): void;\r\n  addOption(nodeId: string): void;\r\n  addOrUpdateNodeTracker(\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): void;\r\n\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nconst NodeComponent: FunctionComponent<NodeProps> = ({\r\n  node,\r\n  updateNode,\r\n  addOption,\r\n  removeNode,\r\n  x,\r\n  y,\r\n  addOrUpdateNodeTracker,\r\n  startNode\r\n}) => {\r\n  const updateType = (type: NodeType) => updateNode({ ...node, type });\r\n  return (\r\n    <DraggableDiv\r\n      x={x}\r\n      y={y}\r\n      onUpdatePosition={(updatedX, updatedY, width, height) =>\r\n        addOrUpdateNodeTracker(\r\n          node.id,\r\n          \"Node\",\r\n          updatedX,\r\n          updatedY,\r\n          width,\r\n          height\r\n        )\r\n      }\r\n    >\r\n      <div className=\"node\">\r\n        <textarea\r\n          placeholder=\"Add a statement e.g. You walk into a dark room.\"\r\n          value={node.statement}\r\n          onChange={e => updateNode({ ...node, statement: e.target.value })}\r\n        />\r\n        <div className=\"node-type--wrapper\">\r\n          {!startNode && (\r\n            <NodeTypeButton\r\n              type=\"Win\"\r\n              currentType={node.type}\r\n              updateType={updateType}\r\n            />\r\n          )}\r\n          <NodeTypeButton\r\n            type=\"Normal\"\r\n            currentType={node.type}\r\n            updateType={updateType}\r\n          />\r\n          {!startNode && (\r\n            <NodeTypeButton\r\n              type=\"Death\"\r\n              currentType={node.type}\r\n              updateType={updateType}\r\n            />\r\n          )}\r\n        </div>\r\n        {node.type === \"Normal\" && (\r\n          <NodeAdder onClick={() => addOption(node.id)} />\r\n        )}\r\n        {!startNode && (\r\n          <button\r\n            className=\"button\"\r\n            title=\"remove node\"\r\n            onClick={() => removeNode(node)}\r\n          >\r\n            <i className=\"fas fa-minus-circle\"></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </DraggableDiv>\r\n  );\r\n};\r\n\r\nexport default NodeComponent;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Verb } from \"../types\";\r\nimport NodeAdder from \"./NodeAdder\";\r\n\r\ninterface VerbProps {\r\n  verb: Verb;\r\n  addVerb(verb: Verb): void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst VerbComponent: FunctionComponent<VerbProps> = ({\r\n  verb,\r\n  addVerb,\r\n  disabled\r\n}) => (\r\n  <div className=\"verb\">\r\n    <p>{verb}</p>\r\n    {!disabled && <NodeAdder onClick={() => addVerb(verb)} />}\r\n  </div>\r\n);\r\n\r\nexport default VerbComponent;\r\n","import React from \"react\";\r\nimport { StoryOption, Verb } from \"../types\";\r\nimport DraggableDiv from \"./DraggableDiv\";\r\nimport VerbComponent from \"./Verb\";\r\n\r\ninterface OptionProps {\r\n  option: StoryOption;\r\n  updateOption(option: StoryOption): void;\r\n  removeOption(option: StoryOption): void;\r\n  addOrUpdateNodeTracker(\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): void;\r\n  addNode(option: StoryOption, verb: Verb): void;\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nclass Option extends React.Component<OptionProps> {\r\n  private addNode = (verb: Verb) => this.props.addNode(this.props.option, verb);\r\n\r\n  public render() {\r\n    const {\r\n      option,\r\n      updateOption,\r\n      x,\r\n      y,\r\n      addOrUpdateNodeTracker,\r\n      removeOption\r\n    } = this.props;\r\n    return (\r\n      <DraggableDiv\r\n        x={x}\r\n        y={y}\r\n        onUpdatePosition={(updatedX, updatedY, width, height) =>\r\n          addOrUpdateNodeTracker(\r\n            option.id,\r\n            \"StoryOption\",\r\n            updatedX,\r\n            updatedY,\r\n            width,\r\n            height\r\n          )\r\n        }\r\n      >\r\n        <div className=\"option\">\r\n          <div className=\"option-top\">\r\n            <input\r\n              value={option.item}\r\n              placeholder=\"item to interact with e.g. book\"\r\n              onChange={event =>\r\n                updateOption({ ...option, item: event.target.value })\r\n              }\r\n            />\r\n            <div>\r\n              <button\r\n                className=\"button\"\r\n                title=\"remove node\"\r\n                onClick={() => removeOption(option)}\r\n              >\r\n                <i className=\"fas fa-minus-circle\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"verbs\">\r\n            <VerbComponent\r\n              verb=\"taste\"\r\n              addVerb={this.addNode}\r\n              disabled={option.tasteId !== undefined}\r\n            />\r\n            <VerbComponent\r\n              verb=\"touch\"\r\n              addVerb={this.addNode}\r\n              disabled={option.touchId !== undefined}\r\n            />\r\n            <VerbComponent\r\n              verb=\"smell\"\r\n              addVerb={this.addNode}\r\n              disabled={option.smellId !== undefined}\r\n            />\r\n            <VerbComponent\r\n              verb=\"look\"\r\n              addVerb={this.addNode}\r\n              disabled={option.lookId !== undefined}\r\n            />\r\n            <VerbComponent\r\n              verb=\"listen\"\r\n              addVerb={this.addNode}\r\n              disabled={option.listenId !== undefined}\r\n            />\r\n          </div>\r\n        </div>\r\n      </DraggableDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Option;\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\ninterface LineProps {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n\r\nconst Line: FunctionComponent<LineProps> = ({ x1, y1, x2, y2 }) => (\r\n  <svg width=\"500\" height=\"500\" className=\"line-wrapper\">\r\n    <line x1={x1} y1={y1} x2={x2} y2={y2} className=\"line\" stroke=\"black\" />\r\n  </svg>\r\n);\r\n\r\nexport default Line;\r\n","import React from \"react\";\r\nimport Line from \"./Line\";\r\nimport { NodeTracker, Story, Node } from \"../types\";\r\n\r\ninterface LinesProps {\r\n  nodeTracker: NodeTracker[];\r\n  story: Story;\r\n}\r\n\r\nclass Lines extends React.Component<LinesProps> {\r\n  public render() {\r\n    const { nodeTracker, story } = this.props;\r\n    const lines = calcLinesFromNodes(nodeTracker, story);\r\n    const otherLines = calcLinesFromStoryOptions(nodeTracker, story);\r\n\r\n    return (\r\n      <>\r\n        {lines.map((line, index) => (\r\n          <Line {...line} key={`line-${index}`} />\r\n        ))}\r\n        {otherLines.map((line, index) => (\r\n          <Line {...line} key={`other-lines-${index}`} />\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lines;\r\n\r\ninterface LineType {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n\r\nconst calcLinesFromStoryOptions = (\r\n  nodeTracker: NodeTracker[],\r\n  story: Story\r\n): LineType[] =>\r\n  nodeTracker\r\n    .flatMap(trackedNode => {\r\n      const option = story.options.find(o => o.id === trackedNode.id);\r\n      if (option) {\r\n        const stuff = [];\r\n        if (option.tasteId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.tasteId, nodeTracker, trackedNode, 0)\r\n          );\r\n        }\r\n\r\n        if (option.touchId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.touchId, nodeTracker, trackedNode, 1)\r\n          );\r\n        }\r\n\r\n        if (option.smellId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.smellId, nodeTracker, trackedNode, 2)\r\n          );\r\n        }\r\n        if (option.lookId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.lookId, nodeTracker, trackedNode, 3)\r\n          );\r\n        }\r\n        if (option.listenId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.listenId, nodeTracker, trackedNode, 4)\r\n          );\r\n        }\r\n\r\n        return stuff;\r\n      }\r\n    })\r\n    .filter(n => n !== undefined) as any;\r\n\r\nconst makeOptionalOptionLine = (\r\n  id: string,\r\n  nodeTracker: NodeTracker[],\r\n  parentNodeTracker: NodeTracker,\r\n  index: number\r\n): LineType | undefined => {\r\n  const found = nodeTracker.find(n => n.id === id);\r\n  return found ? makeOptionLine(parentNodeTracker, found, index) : undefined;\r\n};\r\n\r\nconst calcLinesFromNodes = (\r\n  nodeTracker: NodeTracker[],\r\n  story: Story\r\n): LineType[] =>\r\n  nodeTracker\r\n    .flatMap(trackedNode => {\r\n      const node = story.nodes.find(n => n.id === trackedNode.id);\r\n      if (node) {\r\n        return what(nodeTracker, node, trackedNode);\r\n      }\r\n    })\r\n    .filter(n => n !== undefined) as any;\r\n\r\nconst what = (\r\n  nodeTracker: NodeTracker[],\r\n  node: Node,\r\n  trackedNode: NodeTracker\r\n): LineType[] => {\r\n  const options: NodeTracker[] = node.optionIds\r\n    .map(oid => nodeTracker.find(n => n.id === oid))\r\n    .filter(n => n !== undefined) as any;\r\n  return options.map(o => makeLine(trackedNode, o));\r\n};\r\n\r\nconst makeLine = (trackedNode: NodeTracker, trackedOption: NodeTracker) => ({\r\n  x1: trackedNode.x + trackedNode.width / 2,\r\n  y1: trackedNode.y + trackedNode.height,\r\n  x2: trackedOption.x + trackedOption.width / 2,\r\n  y2: trackedOption.y\r\n});\r\n\r\nconst makeOptionLine = (\r\n  trackedNode: NodeTracker,\r\n  trackedOption: NodeTracker,\r\n  index: number\r\n) => ({\r\n  x1: trackedNode.x + (index / 5) * trackedNode.width + 0.1 * trackedNode.width,\r\n  y1: trackedNode.y + trackedNode.height,\r\n  x2: trackedOption.x + trackedOption.width / 2,\r\n  y2: trackedOption.y\r\n});\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Story, Node, StoryOption, NodeTracker, Verb } from \"../types\";\r\nimport NodeComponent from \"./Node\";\r\nimport Option from \"./Option\";\r\n\r\nimport \"./graph.css\";\r\nimport Lines from \"./Lines\";\r\n\r\ninterface GraphTabProps {\r\n  story: Story;\r\n  nodeTracker: NodeTracker[];\r\n  updateTitle(title: string): void;\r\n  updateNode(node: Node): void;\r\n  removeNode(node: Node): void;\r\n  removeOption(option: StoryOption): void;\r\n  addOption(nodeId: string): void;\r\n  addNode(option: StoryOption, verb: Verb): void;\r\n  updateOption(option: StoryOption): void;\r\n  addOrUpdateNodeTracker(\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): void;\r\n}\r\n\r\nconst GraphTab: FunctionComponent<GraphTabProps> = ({\r\n  story,\r\n  nodeTracker,\r\n  updateTitle,\r\n  updateNode,\r\n  updateOption,\r\n  addOrUpdateNodeTracker,\r\n  addOption,\r\n  removeOption,\r\n  addNode,\r\n  removeNode\r\n}) => (\r\n  <div>\r\n    <input\r\n      value={story.title}\r\n      className=\"title\"\r\n      placeholder=\"Title\"\r\n      onChange={event => updateTitle(event.target.value)}\r\n    />\r\n    {story.nodes.map((node, index) => (\r\n      <NodeComponent\r\n        key={node.id}\r\n        node={node}\r\n        addOption={addOption}\r\n        updateNode={updateNode}\r\n        removeNode={removeNode}\r\n        addOrUpdateNodeTracker={addOrUpdateNodeTracker}\r\n        x={index}\r\n        y={index}\r\n        startNode={index === 0}\r\n      />\r\n    ))}\r\n\r\n    {story.options.map((option, index) => (\r\n      <Option\r\n        option={option}\r\n        key={option.id}\r\n        updateOption={updateOption}\r\n        removeOption={removeOption}\r\n        addOrUpdateNodeTracker={addOrUpdateNodeTracker}\r\n        addNode={addNode}\r\n        x={index}\r\n        y={index}\r\n      />\r\n    ))}\r\n    <Lines story={story} nodeTracker={nodeTracker} />\r\n  </div>\r\n);\r\n\r\nexport default GraphTab;\r\n","export const validate = (json: any) => {\r\n  console.log(json);\r\n  validateString(json.title);\r\n  validateArray(json.nodes);\r\n  validateArray(json.options);\r\n\r\n  json.nodes.forEach(validateNode);\r\n  json.options.forEach(validateOption);\r\n};\r\n\r\nconst validateNode = (node: any) => {\r\n  if (node === undefined || node === null) {\r\n    throw new Error(\"Missing node\");\r\n  }\r\n\r\n  validateString(node.id);\r\n  validateString(node.statement);\r\n\r\n  if (node.type !== \"Normal\" && node.type !== \"Win\" && node.type !== \"Death\") {\r\n    throw new Error(\"bad node type\");\r\n  }\r\n\r\n  validateArray(node.optionIds);\r\n\r\n  node.optionIds.forEach(validateString);\r\n};\r\n\r\nconst validateOption = (option: any) => {\r\n  validateString(option.id);\r\n  validateString(option.item);\r\n  validateStringOrUndefined(option.tasteId);\r\n  validateStringOrUndefined(option.touchId);\r\n  validateStringOrUndefined(option.smellId);\r\n  validateStringOrUndefined(option.lookId);\r\n  validateStringOrUndefined(option.listenId);\r\n};\r\n\r\nconst validateStringOrUndefined = (thing: any) => {\r\n  if (thing === undefined) {\r\n    return;\r\n  }\r\n  validateString(thing);\r\n};\r\nconst validateString = (thing: any) => {\r\n  if (typeof thing !== \"string\") {\r\n    throw new Error(\"not a string\");\r\n  }\r\n};\r\nconst validateArray = (thing: any) => {\r\n  if (!Array.isArray(thing)) {\r\n    throw new Error(\"not an array\");\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Story } from \"./types\";\r\nimport { validate } from \"./ValidateStoryJson\";\r\nimport classnames from \"classnames\";\r\ninterface JsonTabProps {\r\n  story: Story;\r\n  updateStory(story: Story): void;\r\n}\r\n\r\ninterface JsonTabState {\r\n  error: boolean;\r\n  updatedJson: string;\r\n}\r\n\r\nclass JsonTab extends React.Component<JsonTabProps, JsonTabState> {\r\n  constructor(props: JsonTabProps) {\r\n    super(props);\r\n    this.state = { error: false, updatedJson: JSON.stringify(props.story) };\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: JsonTabProps) {\r\n    if (prevProps.story !== this.props.story) {\r\n      this.setState({\r\n        error: false,\r\n        updatedJson: JSON.stringify(this.props.story)\r\n      });\r\n    }\r\n  }\r\n  private validateJson = (json: string) => {\r\n    this.setState({ updatedJson: json, error: false });\r\n    try {\r\n      const parsedJson = JSON.parse(json);\r\n      validate(parsedJson);\r\n      this.props.updateStory(parsedJson);\r\n    } catch (e) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const { error, updatedJson } = this.state;\r\n    return (\r\n      <div className=\"json-tab\">\r\n        <p\r\n          className={classnames(\"valid-checker\", {\r\n            \"valid-checker--valid\": !error\r\n          })}\r\n        >\r\n          Valid {error && <i className=\"fas fa-times-circle\" />}\r\n          {!error && <i className=\"fas fa-check-circle\" />}\r\n        </p>\r\n        <div className=\"json-wrapper\">\r\n          <textarea\r\n            className=\"json--text-area\"\r\n            value={updatedJson}\r\n            onChange={e => this.validateJson(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JsonTab;\r\n","import { Story, Node, StoryOption, Verb } from \"./types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { update, without } from \"ramda\";\r\n\r\nexport const addNode = (\r\n  story: Story,\r\n  option: StoryOption,\r\n  verb: Verb\r\n): Story => {\r\n  const nodes = story.nodes;\r\n  const id = uuidv4();\r\n  const updatedNodes: Node[] = [\r\n    ...nodes,\r\n    { type: \"Normal\", statement: \"\", id, optionIds: [] }\r\n  ];\r\n\r\n  const optionIndex = story.options.findIndex(o => o.id === option.id);\r\n  const updatedOption: StoryOption = {\r\n    ...option,\r\n    ...(verb === \"taste\" && { tasteId: id }),\r\n    ...(verb === \"touch\" && { touchId: id }),\r\n    ...(verb === \"listen\" && { listenId: id }),\r\n    ...(verb === \"look\" && { lookId: id }),\r\n    ...(verb === \"smell\" && { smellId: id })\r\n  };\r\n\r\n  const options = update(optionIndex, updatedOption, story.options);\r\n\r\n  return { ...story, nodes: updatedNodes, options };\r\n};\r\n\r\nexport const removeNode = (story: Story, node: Node): Story => {\r\n  const updatedNodes = without([node], story.nodes);\r\n  const options = story.options.map(o => {\r\n    return {\r\n      ...o,\r\n      tasteId: clearOptionOfRemovedNode(node, o.tasteId),\r\n      touchId: clearOptionOfRemovedNode(node, o.touchId),\r\n      smellId: clearOptionOfRemovedNode(node, o.smellId),\r\n      listenId: clearOptionOfRemovedNode(node, o.listenId),\r\n      lookId: clearOptionOfRemovedNode(node, o.lookId)\r\n    };\r\n  });\r\n  return { ...story, nodes: updatedNodes, options };\r\n};\r\n\r\nexport const removeOption = (story: Story, option: StoryOption): Story => {\r\n  const options = without([option], story.options);\r\n  const nodes = story.nodes.map(n => ({\r\n    ...n,\r\n    optionIds: n.optionIds.filter(id => id !== option.id)\r\n  }));\r\n  return { ...story, nodes, options };\r\n};\r\n\r\nconst clearOptionOfRemovedNode = (node: Node, optionId: string | undefined) =>\r\n  optionId === node.id ? undefined : optionId;\r\n\r\nexport const addOption = (story: Story, nodeId: string): Story => {\r\n  const optionId = uuidv4();\r\n  const options = story.options;\r\n  const node = story.nodes.find(n => n.id === nodeId)!!; // TODO\r\n  const updatedNode = { ...node, optionIds: [...node.optionIds, optionId] };\r\n  const updatedOptions = [...options, { id: optionId, item: \"\" }];\r\n  return { ...updateNode(story, updatedNode), options: updatedOptions };\r\n};\r\n\r\nexport const updateNode = (story: Story, node: Node): Story => {\r\n  const nodes = story.nodes;\r\n  const nodeIndex = nodes.findIndex(n => n.id === node.id);\r\n  const updatedNodes = update(nodeIndex, node, nodes);\r\n  return { ...story, nodes: updatedNodes };\r\n};\r\n\r\nexport const updateOption = (story: Story, option: StoryOption): Story => {\r\n  const options = story.options;\r\n  const index = options.findIndex(o => o.id === option.id);\r\n  const updatedOptions = update(index, option, options);\r\n  return { ...story, options: updatedOptions };\r\n};\r\n","import { NodeTracker } from \"./types\";\r\n\r\nexport const removeNodeFromTracker = (\r\n  nodeTracker: NodeTracker[],\r\n  id: string\r\n): NodeTracker[] => nodeTracker.filter(n => n.id !== id);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Story, Node, StoryOption, NodeTracker, Verb } from \"./types\";\r\nimport GraphTab from \"./graph/GraphTab\";\r\nimport JsonTab from \"./JsonTab\";\r\nimport { update } from \"ramda\";\r\nimport {\r\n  addNode,\r\n  updateNode,\r\n  addOption,\r\n  updateOption,\r\n  removeNode,\r\n  removeOption\r\n} from \"./StoryUpdater\";\r\nimport { removeNodeFromTracker } from \"./NodeTrackerHelper\";\r\n\r\ninterface AppState {\r\n  tab: \"graph\" | \"json\";\r\n  story: Story;\r\n  nodeTracker: NodeTracker[];\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n  public state: AppState = {\r\n    tab: \"graph\",\r\n    story: {\r\n      title: \"\",\r\n      nodes: [\r\n        { statement: \"\", type: \"Normal\", optionIds: [], id: \"first-node\" }\r\n      ],\r\n      options: []\r\n    },\r\n    nodeTracker: []\r\n  };\r\n\r\n  private updateTab = (tab: \"graph\" | \"json\") => this.setState({ tab });\r\n  private updateTitle = (title: string) =>\r\n    this.setState({ story: { ...this.state.story, title } });\r\n  private updateNode = (node: Node) => {\r\n    this.setState({ story: updateNode(this.state.story, node) });\r\n  };\r\n\r\n  private addOrUpdateNodeTracker = (\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ) => {\r\n    const { nodeTracker } = this.state;\r\n    const index = nodeTracker.findIndex(n => n.id === id);\r\n    const node = { id, x, y, type, width, height };\r\n    if (index === -1) {\r\n      this.setState({ nodeTracker: [...nodeTracker, node] });\r\n    } else {\r\n      this.setState({ nodeTracker: update(index, node, nodeTracker) });\r\n    }\r\n  };\r\n\r\n  private addNode = (option: StoryOption, verb: Verb) => {\r\n    this.setState({ story: addNode(this.state.story, option, verb) });\r\n  };\r\n\r\n  private removeNode = (node: Node) => {\r\n    this.setState({\r\n      story: removeNode(this.state.story, node),\r\n      nodeTracker: removeNodeFromTracker(this.state.nodeTracker, node.id)\r\n    });\r\n  };\r\n\r\n  private removeOption = (option: StoryOption) => {\r\n    this.setState({\r\n      story: removeOption(this.state.story, option),\r\n      nodeTracker: removeNodeFromTracker(this.state.nodeTracker, option.id)\r\n    });\r\n  };\r\n  private addOption = (nodeId: string) => {\r\n    this.updateStory(addOption(this.state.story, nodeId));\r\n  };\r\n\r\n  private updateOption = (option: StoryOption) => {\r\n    this.updateStory(updateOption(this.state.story, option));\r\n  };\r\n\r\n  private updateStory = (story: Story) => this.setState({ story });\r\n\r\n  public render() {\r\n    const { tab, story, nodeTracker } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"tab-switcher\">\r\n          <button\r\n            className=\"switcher\"\r\n            title=\"graph\"\r\n            onClick={() => this.updateTab(\"graph\")}\r\n          >\r\n            <i className=\"fas fa-sitemap\" />\r\n          </button>\r\n          <button\r\n            className=\"switcher\"\r\n            title=\"json\"\r\n            onClick={() => this.updateTab(\"json\")}\r\n          >\r\n            <i className=\"far fa-file\" />\r\n          </button>\r\n        </div>\r\n        <div className={tab === \"graph\" ? \"\" : \"tab--hidden\"}>\r\n          <GraphTab\r\n            story={story}\r\n            nodeTracker={nodeTracker}\r\n            updateTitle={this.updateTitle}\r\n            updateNode={this.updateNode}\r\n            removeNode={this.removeNode}\r\n            removeOption={this.removeOption}\r\n            addOption={this.addOption}\r\n            addNode={this.addNode}\r\n            updateOption={this.updateOption}\r\n            addOrUpdateNodeTracker={this.addOrUpdateNodeTracker}\r\n          />\r\n        </div>\r\n        <div className={tab === \"json\" ? \"\" : \"tab--hidden\"}>\r\n          <JsonTab story={story} updateStory={this.updateStory} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}