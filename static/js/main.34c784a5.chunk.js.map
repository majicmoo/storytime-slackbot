{"version":3,"sources":["graph/DraggableDiv.tsx","graph/Node.tsx","graph/Verb.tsx","graph/Option.tsx","graph/Line.tsx","graph/Lines.tsx","graph/GraphTab.tsx","JsonTab.tsx","StoryUpdater.ts","NodeTrackerHelper.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["DraggableDiv","props","ref","createRef","startDragging","e","current","setState","dragging","relX","pageX","offsetLeft","relY","pageY","offsetTop","stopDragging","drag","x","state","y","onUpdatePosition","width","height","clientWidth","clientHeight","this","document","addEventListener","removeEventListener","children","className","style","left","top","onMouseDown","React","Component","NodeComponent","node","updateNode","addOption","removeNode","addOrUpdateNodeTracker","startNode","updatedX","updatedY","id","value","statement","onChange","target","type","onClick","VerbComponent","verb","addVerb","disabled","Option","addNode","option","updateOption","item","event","Verb","undefined","tasteId","touchId","smellId","lookId","listenId","Line","x1","y1","x2","y2","stroke","Lines","nodeTracker","story","lines","calcLinesFromNodes","otherLines","calcLinesFromStoryOptions","map","line","index","key","flatMap","trackedNode","options","find","o","stuff","push","makeOptionalOptionLine","filter","n","parentNodeTracker","found","makeOptionLine","nodes","what","optionIds","oid","makeLine","trackedOption","GraphTab","updateTitle","title","Node","JsonTab","JSON","stringify","uuidv4","updatedNodes","optionIndex","findIndex","updatedOption","update","without","clearOptionOfRemovedNode","optionId","nodeId","updatedNode","updatedOptions","nodeIndex","removeNodeFromTracker","App","tab","updateTab","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.34c784a5.chunk.js","sourcesContent":["import React, { createRef, RefObject, ReactNode } from \"react\";\r\n\r\ninterface DraggableDivProps {\r\n  x: number;\r\n  y: number;\r\n  children: ReactNode;\r\n  className: string;\r\n  onUpdatePosition(x: number, y: number, width: number, height: number): void;\r\n}\r\n\r\ninterface DraggableDivState {\r\n  x: number;\r\n  y: number;\r\n  dragging: boolean;\r\n  relX: number;\r\n  relY: number;\r\n}\r\n\r\nclass DraggableDiv extends React.Component<\r\n  DraggableDivProps,\r\n  DraggableDivState\r\n> {\r\n  private ref: RefObject<HTMLDivElement> = createRef();\r\n  constructor(props: DraggableDivProps) {\r\n    super(props);\r\n    this.state = { x: props.x, y: props.y, dragging: false, relX: 0, relY: 0 };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.props.onUpdatePosition(\r\n      this.props.x,\r\n      this.props.y,\r\n      this.width(),\r\n      this.height()\r\n    );\r\n  }\r\n\r\n  public componentDidUpdate(\r\n    props: DraggableDivProps,\r\n    state: DraggableDivState\r\n  ) {\r\n    if (this.state.dragging && !state.dragging) {\r\n      document.addEventListener(\"mousemove\", this.drag);\r\n      document.addEventListener(\"mouseup\", this.stopDragging);\r\n    } else if (!this.state.dragging && state.dragging) {\r\n      document.removeEventListener(\"mousemove\", this.drag);\r\n      document.removeEventListener(\"mouseup\", this.stopDragging);\r\n    }\r\n  }\r\n\r\n  private startDragging = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (this.ref.current) {\r\n      this.setState({\r\n        dragging: true,\r\n        relX: e.pageX - this.ref.current.offsetLeft,\r\n        relY: e.pageY - this.ref.current.offsetTop\r\n      });\r\n    }\r\n  };\r\n\r\n  private stopDragging = () => {\r\n    this.setState({ dragging: false });\r\n  };\r\n\r\n  private drag = (e: MouseEvent) => {\r\n    const x = e.pageX - this.state.relX;\r\n    const y = e.pageY - this.state.relY;\r\n    if (this.state.dragging) {\r\n      this.setState({ x, y });\r\n      this.props.onUpdatePosition(x, y, this.width(), this.height());\r\n    }\r\n  };\r\n\r\n  private width = (): number => this.ref.current?.clientWidth || 0;\r\n  private height = (): number => this.ref.current?.clientHeight || 0;\r\n\r\n  public render() {\r\n    const { children, className } = this.props;\r\n    const { x, y } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={className}\r\n        style={{ left: `${x}px`, top: `${y}px` }}\r\n        onMouseDown={this.startDragging}\r\n        ref={this.ref}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DraggableDiv;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Node } from \"../types\";\r\n\r\nimport DraggableDiv from \"./DraggableDiv\";\r\n\r\ninterface NodeProps {\r\n  node: Node;\r\n  startNode: boolean;\r\n  updateNode(node: Node): void;\r\n  removeNode(node: Node): void;\r\n  addOption(nodeId: string): void;\r\n  addOrUpdateNodeTracker(\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): void;\r\n\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nconst NodeComponent: FunctionComponent<NodeProps> = ({\r\n  node,\r\n  updateNode,\r\n  addOption,\r\n  removeNode,\r\n  x,\r\n  y,\r\n  addOrUpdateNodeTracker,\r\n  startNode\r\n}) => (\r\n  <DraggableDiv\r\n    className=\"node\"\r\n    x={x}\r\n    y={y}\r\n    onUpdatePosition={(updatedX, updatedY, width, height) =>\r\n      addOrUpdateNodeTracker(node.id, \"Node\", updatedX, updatedY, width, height)\r\n    }\r\n  >\r\n    <input\r\n      value={node.statement}\r\n      onChange={e => updateNode({ ...node, statement: e.target.value })}\r\n    />\r\n    <p>{node.type}</p>\r\n    <button onClick={() => addOption(node.id)}>Add Option</button>\r\n    {!startNode && <button onClick={() => removeNode(node)}>Remove</button>}\r\n  </DraggableDiv>\r\n);\r\n\r\nexport default NodeComponent;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Verb } from \"../types\";\r\n\r\ninterface VerbProps {\r\n  verb: Verb;\r\n  addVerb(verb: Verb): void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst VerbComponent: FunctionComponent<VerbProps> = ({\r\n  verb,\r\n  addVerb,\r\n  disabled\r\n}) => (\r\n  <div className=\"verb\">\r\n    <p>{verb}</p>\r\n    {!disabled && <button onClick={() => addVerb(verb)}>+</button>}\r\n  </div>\r\n);\r\n\r\nexport default VerbComponent;\r\n","import React from \"react\";\r\nimport { StoryOption, Verb } from \"../types\";\r\nimport DraggableDiv from \"./DraggableDiv\";\r\nimport VerbComponent from \"./Verb\";\r\n\r\ninterface OptionProps {\r\n  option: StoryOption;\r\n  updateOption(option: StoryOption): void;\r\n  addOrUpdateNodeTracker(\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): void;\r\n  addNode(option: StoryOption, verb: Verb): void;\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nclass Option extends React.Component<OptionProps> {\r\n  private addNode = (verb: Verb) => this.props.addNode(this.props.option, verb);\r\n\r\n  public render() {\r\n    const { option, updateOption, x, y, addOrUpdateNodeTracker } = this.props;\r\n    return (\r\n      <DraggableDiv\r\n        className=\"option\"\r\n        x={x}\r\n        y={y}\r\n        onUpdatePosition={(updatedX, updatedY, width, height) =>\r\n          addOrUpdateNodeTracker(\r\n            option.id,\r\n            \"StoryOption\",\r\n            updatedX,\r\n            updatedY,\r\n            width,\r\n            height\r\n          )\r\n        }\r\n      >\r\n        <p>Option</p>\r\n        <input\r\n          value={option.item}\r\n          onChange={event =>\r\n            updateOption({ ...option, item: event.target.value })\r\n          }\r\n        />\r\n        <div className=\"verbs\">\r\n          <VerbComponent\r\n            verb=\"taste\"\r\n            addVerb={this.addNode}\r\n            disabled={option.tasteId !== undefined}\r\n          />\r\n          <VerbComponent\r\n            verb=\"touch\"\r\n            addVerb={this.addNode}\r\n            disabled={option.touchId !== undefined}\r\n          />\r\n          <VerbComponent\r\n            verb=\"smell\"\r\n            addVerb={this.addNode}\r\n            disabled={option.smellId !== undefined}\r\n          />\r\n          <VerbComponent\r\n            verb=\"look\"\r\n            addVerb={this.addNode}\r\n            disabled={option.lookId !== undefined}\r\n          />\r\n          <VerbComponent\r\n            verb=\"listen\"\r\n            addVerb={this.addNode}\r\n            disabled={option.listenId !== undefined}\r\n          />\r\n        </div>\r\n      </DraggableDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Option;\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\ninterface LineProps {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n\r\nconst Line: FunctionComponent<LineProps> = ({ x1, y1, x2, y2 }) => (\r\n  <svg width=\"500\" height=\"500\" className=\"line-wrapper\">\r\n    <line x1={x1} y1={y1} x2={x2} y2={y2} className=\"line\" stroke=\"black\" />\r\n  </svg>\r\n);\r\n\r\nexport default Line;\r\n","import React from \"react\";\r\nimport Line from \"./Line\";\r\nimport { NodeTracker, Story, Node } from \"../types\";\r\n\r\ninterface LinesProps {\r\n  nodeTracker: NodeTracker[];\r\n  story: Story;\r\n}\r\n\r\nclass Lines extends React.Component<LinesProps> {\r\n  public render() {\r\n    const { nodeTracker, story } = this.props;\r\n    const lines = calcLinesFromNodes(nodeTracker, story);\r\n    const otherLines = calcLinesFromStoryOptions(nodeTracker, story);\r\n\r\n    return (\r\n      <>\r\n        {lines.map((line, index) => (\r\n          <Line {...line} key={`line-${index}`} />\r\n        ))}\r\n        {otherLines.map((line, index) => (\r\n          <Line {...line} key={`other-lines-${index}`} />\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lines;\r\n\r\ninterface LineType {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n\r\nconst calcLinesFromStoryOptions = (\r\n  nodeTracker: NodeTracker[],\r\n  story: Story\r\n): LineType[] =>\r\n  nodeTracker\r\n    .flatMap(trackedNode => {\r\n      const option = story.options.find(o => o.id === trackedNode.id);\r\n      if (option) {\r\n        const stuff = [];\r\n        if (option.tasteId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.tasteId, nodeTracker, trackedNode, 0)\r\n          );\r\n        }\r\n\r\n        if (option.touchId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.touchId, nodeTracker, trackedNode, 1)\r\n          );\r\n        }\r\n\r\n        if (option.smellId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.smellId, nodeTracker, trackedNode, 2)\r\n          );\r\n        }\r\n        if (option.lookId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.lookId, nodeTracker, trackedNode, 3)\r\n          );\r\n        }\r\n        if (option.listenId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.listenId, nodeTracker, trackedNode, 4)\r\n          );\r\n        }\r\n\r\n        return stuff;\r\n      }\r\n    })\r\n    .filter(n => n !== undefined) as any;\r\n\r\nconst makeOptionalOptionLine = (\r\n  id: string,\r\n  nodeTracker: NodeTracker[],\r\n  parentNodeTracker: NodeTracker,\r\n  index: number\r\n): LineType | undefined => {\r\n  const found = nodeTracker.find(n => n.id === id);\r\n  return found ? makeOptionLine(parentNodeTracker, found, index) : undefined;\r\n};\r\n\r\nconst calcLinesFromNodes = (\r\n  nodeTracker: NodeTracker[],\r\n  story: Story\r\n): LineType[] =>\r\n  nodeTracker\r\n    .flatMap(trackedNode => {\r\n      const node = story.nodes.find(n => n.id === trackedNode.id);\r\n      if (node) {\r\n        return what(nodeTracker, node, trackedNode);\r\n      }\r\n    })\r\n    .filter(n => n !== undefined) as any;\r\n\r\nconst what = (\r\n  nodeTracker: NodeTracker[],\r\n  node: Node,\r\n  trackedNode: NodeTracker\r\n): LineType[] => {\r\n  const options: NodeTracker[] = node.optionIds\r\n    .map(oid => nodeTracker.find(n => n.id === oid))\r\n    .filter(n => n !== undefined) as any;\r\n  return options.map(o => makeLine(trackedNode, o));\r\n};\r\n\r\nconst makeLine = (trackedNode: NodeTracker, trackedOption: NodeTracker) => ({\r\n  x1: trackedNode.x + trackedNode.width / 2,\r\n  y1: trackedNode.y + trackedNode.height,\r\n  x2: trackedOption.x + trackedOption.width / 2,\r\n  y2: trackedOption.y\r\n});\r\n\r\nconst makeOptionLine = (\r\n  trackedNode: NodeTracker,\r\n  trackedOption: NodeTracker,\r\n  index: number\r\n) => ({\r\n  x1: trackedNode.x + (index / 5) * trackedNode.width + 0.1 * trackedNode.width,\r\n  y1: trackedNode.y + trackedNode.height,\r\n  x2: trackedOption.x,\r\n  y2: trackedOption.y\r\n});\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Story, Node, StoryOption, NodeTracker, Verb } from \"../types\";\r\nimport NodeComponent from \"./Node\";\r\nimport Option from \"./Option\";\r\n\r\nimport \"./graph.css\";\r\nimport Lines from \"./Lines\";\r\n\r\ninterface GraphTabProps {\r\n  story: Story;\r\n  nodeTracker: NodeTracker[];\r\n  updateTitle(title: string): void;\r\n  updateNode(node: Node): void;\r\n  removeNode(node: Node): void;\r\n  addOption(nodeId: string): void;\r\n  addNode(option: StoryOption, verb: Verb): void;\r\n  updateOption(option: StoryOption): void;\r\n  addOrUpdateNodeTracker(\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): void;\r\n}\r\n\r\nconst GraphTab: FunctionComponent<GraphTabProps> = ({\r\n  story,\r\n  nodeTracker,\r\n  updateTitle,\r\n  updateNode,\r\n  updateOption,\r\n  addOrUpdateNodeTracker,\r\n  addOption,\r\n  addNode,\r\n  removeNode\r\n}) => (\r\n  <div>\r\n    <input\r\n      value={story.title}\r\n      onChange={event => updateTitle(event.target.value)}\r\n    />\r\n    {story.nodes.map((node, index) => (\r\n      <NodeComponent\r\n        key={node.id}\r\n        node={node}\r\n        addOption={addOption}\r\n        updateNode={updateNode}\r\n        removeNode={removeNode}\r\n        addOrUpdateNodeTracker={addOrUpdateNodeTracker}\r\n        x={index}\r\n        y={index}\r\n        startNode={index === 0}\r\n      />\r\n    ))}\r\n\r\n    {story.options.map((option, index) => (\r\n      <Option\r\n        option={option}\r\n        key={option.id}\r\n        updateOption={updateOption}\r\n        addOrUpdateNodeTracker={addOrUpdateNodeTracker}\r\n        addNode={addNode}\r\n        x={index}\r\n        y={index}\r\n      />\r\n    ))}\r\n    <Lines story={story} nodeTracker={nodeTracker} />\r\n  </div>\r\n);\r\n\r\nexport default GraphTab;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Story } from \"./types\";\r\n\r\ninterface JsonTabProps {\r\n  story: Story;\r\n}\r\n\r\nconst JsonTab: FunctionComponent<JsonTabProps> = story => (\r\n  <div>\r\n    <p>{JSON.stringify(story)}</p>\r\n  </div>\r\n);\r\n\r\nexport default JsonTab;\r\n","import { Story, Node, StoryOption, Verb } from \"./types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { update, without } from \"ramda\";\r\n\r\nexport const addNode = (\r\n  story: Story,\r\n  option: StoryOption,\r\n  verb: Verb\r\n): Story => {\r\n  const nodes = story.nodes;\r\n  const id = uuidv4();\r\n  const updatedNodes: Node[] = [\r\n    ...nodes,\r\n    { type: \"Normal\", statement: \"\", id, optionIds: [] }\r\n  ];\r\n\r\n  const optionIndex = story.options.findIndex(o => o.id === option.id);\r\n  const updatedOption: StoryOption = {\r\n    ...option,\r\n    ...(verb === \"taste\" && { tasteId: id }),\r\n    ...(verb === \"touch\" && { touchId: id }),\r\n    ...(verb === \"listen\" && { listenId: id }),\r\n    ...(verb === \"look\" && { lookId: id }),\r\n    ...(verb === \"smell\" && { smellId: id })\r\n  };\r\n\r\n  const options = update(optionIndex, updatedOption, story.options);\r\n\r\n  return { ...story, nodes: updatedNodes, options };\r\n};\r\n\r\nexport const removeNode = (story: Story, node: Node): Story => {\r\n  const updatedNodes = without([node], story.nodes);\r\n  const options = story.options.map(o => {\r\n    return {\r\n      ...o,\r\n      tasteId: clearOptionOfRemovedNode(node, o.tasteId),\r\n      touchId: clearOptionOfRemovedNode(node, o.touchId),\r\n      smellId: clearOptionOfRemovedNode(node, o.smellId),\r\n      listenId: clearOptionOfRemovedNode(node, o.listenId),\r\n      lookId: clearOptionOfRemovedNode(node, o.lookId)\r\n    };\r\n  });\r\n  return { ...story, nodes: updatedNodes, options };\r\n};\r\n\r\nconst clearOptionOfRemovedNode = (node: Node, optionId: string | undefined) =>\r\n  optionId === node.id ? undefined : optionId;\r\n\r\nexport const addOption = (story: Story, nodeId: string): Story => {\r\n  const optionId = uuidv4();\r\n  const options = story.options;\r\n  const node = story.nodes.find(n => n.id === nodeId)!!; // TODO\r\n  const updatedNode = { ...node, optionIds: [...node.optionIds, optionId] };\r\n  const updatedOptions = [...options, { id: optionId, item: \"\" }];\r\n  return { ...updateNode(story, updatedNode), options: updatedOptions };\r\n};\r\n\r\nexport const updateNode = (story: Story, node: Node): Story => {\r\n  const nodes = story.nodes;\r\n  const nodeIndex = nodes.findIndex(n => n.id === node.id);\r\n  const updatedNodes = update(nodeIndex, node, nodes);\r\n  return { ...story, nodes: updatedNodes };\r\n};\r\n\r\nexport const updateOption = (story: Story, option: StoryOption): Story => {\r\n  const options = story.options;\r\n  const index = options.findIndex(o => o.id === option.id);\r\n  const updatedOptions = update(index, option, options);\r\n  return { ...story, options: updatedOptions };\r\n};\r\n","import { NodeTracker } from \"./types\";\r\n\r\nexport const removeNodeFromTracker = (\r\n  nodeTracker: NodeTracker[],\r\n  id: string\r\n): NodeTracker[] => nodeTracker.filter(n => n.id !== id);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Story, Node, StoryOption, NodeTracker, Verb } from \"./types\";\r\nimport GraphTab from \"./graph/GraphTab\";\r\nimport JsonTab from \"./JsonTab\";\r\nimport { update } from \"ramda\";\r\nimport {\r\n  addNode,\r\n  updateNode,\r\n  addOption,\r\n  updateOption,\r\n  removeNode\r\n} from \"./StoryUpdater\";\r\nimport { removeNodeFromTracker } from \"./NodeTrackerHelper\";\r\n\r\ninterface AppState {\r\n  tab: \"graph\" | \"json\";\r\n  story: Story;\r\n  nodeTracker: NodeTracker[];\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n  public state: AppState = {\r\n    tab: \"graph\",\r\n    story: {\r\n      title: \"\",\r\n      nodes: [\r\n        { statement: \"\", type: \"Normal\", optionIds: [], id: \"first-node\" }\r\n      ],\r\n      options: []\r\n    },\r\n    nodeTracker: []\r\n  };\r\n\r\n  private updateTab = (tab: \"graph\" | \"json\") => this.setState({ tab });\r\n  private updateTitle = (title: string) =>\r\n    this.setState({ story: { ...this.state.story, title } });\r\n  private updateNode = (node: Node) => {\r\n    this.setState({ story: updateNode(this.state.story, node) });\r\n  };\r\n\r\n  private addOrUpdateNodeTracker = (\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ) => {\r\n    const { nodeTracker } = this.state;\r\n    const index = nodeTracker.findIndex(n => n.id === id);\r\n    const node = { id, x, y, type, width, height };\r\n    if (index === -1) {\r\n      this.setState({ nodeTracker: [...nodeTracker, node] });\r\n    } else {\r\n      this.setState({ nodeTracker: update(index, node, nodeTracker) });\r\n    }\r\n  };\r\n\r\n  private addNode = (option: StoryOption, verb: Verb) => {\r\n    this.setState({ story: addNode(this.state.story, option, verb) });\r\n  };\r\n\r\n  private removeNode = (node: Node) => {\r\n    this.setState({\r\n      story: removeNode(this.state.story, node),\r\n      nodeTracker: removeNodeFromTracker(this.state.nodeTracker, node.id)\r\n    });\r\n  };\r\n\r\n  private addOption = (nodeId: string) => {\r\n    this.setState({ story: addOption(this.state.story, nodeId) });\r\n  };\r\n\r\n  private updateOption = (option: StoryOption) => {\r\n    this.setState({ story: updateOption(this.state.story, option) });\r\n  };\r\n\r\n  public render() {\r\n    const { tab, story, nodeTracker } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"tab-switcher\">\r\n          <button onClick={() => this.updateTab(\"graph\")}>Graph</button>\r\n          <button onClick={() => this.updateTab(\"json\")}>JSON</button>\r\n        </div>\r\n        <div className={tab === \"graph\" ? \"\" : \"tab--hidden\"}>\r\n          <GraphTab\r\n            story={story}\r\n            nodeTracker={nodeTracker}\r\n            updateTitle={this.updateTitle}\r\n            updateNode={this.updateNode}\r\n            removeNode={this.removeNode}\r\n            addOption={this.addOption}\r\n            addNode={this.addNode}\r\n            updateOption={this.updateOption}\r\n            addOrUpdateNodeTracker={this.addOrUpdateNodeTracker}\r\n          />\r\n        </div>\r\n        <div className={tab === \"json\" ? \"\" : \"tab--hidden\"}>\r\n          <JsonTab story={story} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}