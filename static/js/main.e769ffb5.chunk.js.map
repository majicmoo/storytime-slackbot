{"version":3,"sources":["graph/DraggableGraphNode.tsx","graph/NodeAdder.tsx","graph/Connector.tsx","graph/NodeTypeButton.tsx","graph/NodeTypes.tsx","graph/Node.tsx","graph/Verb.tsx","graph/Option.tsx","graph/Line.tsx","graph/Lines.tsx","graph/ConnectorArrow.tsx","graph/GraphTab.tsx","ValidateStoryJson.ts","JsonTab.tsx","StoryUpdater.ts","NodeTrackerHelper.ts","types.ts","chat/Narrator.ts","chat/Chat.tsx","Switcher.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DraggableGraphNode","props","ref","createRef","startDragging","e","current","setState","dragging","relX","pageX","offsetLeft","relY","pageY","offsetTop","stopDragging","drag","x","state","y","onUpdatePosition","width","height","clientWidth","clientHeight","this","nodeTrackers","length","maybeEntry","find","n","id","undefined","reduce","acc","next","biggestX","biggestY","setTimeout","scrollIntoView","document","addEventListener","removeEventListener","children","className","classnames","style","left","top","onMouseDown","title","React","Component","NodeAdder","onClick","Connector","active","startDrawing","console","log","nodeTracker","drawLine","stopDrawing","overlappingNode","type","canCollideWith","onCollision","stopDrawingLine","mouseMove","drawFrom","y1","x1","x2","y2","NodeTypeButton","currentType","updateType","NodeTypes","startNode","node","updateNode","NodeComponent","addOption","removeNode","addOrUpdateNodeTracker","connectToOption","updatedX","updatedY","optionId","placeholder","value","statement","onChange","target","VerbComponent","verb","addVerb","disabled","Option","addNode","option","updateOption","removeOption","item","event","Verb","tasteId","touchId","smellId","lookId","listenId","Line","position","markerWidth","markerHeight","refX","refY","orient","markerUnits","d","fill","stroke","markerEnd","Lines","story","lines","calcLinesFromNodes","calcLinesFromStoryOptions","map","line","index","key","flatMap","trackedNode","options","o","stuff","push","makeOptionalOptionLine","filter","parentNodeTracker","found","makeOptionLine","nodes","what","optionIds","oid","makeLine","trackedOption","ConnectorArrow","drawing","GraphTab","updateTitle","lineCoordinates","showLine","Node","validate","json","validateString","validateArray","forEach","validateNode","validateOption","Error","validateStringOrUndefined","thing","Array","isArray","JsonTab","validateJson","updatedJson","error","copied","parsedJson","JSON","parse","updateStory","copy","navigator","clipboard","writeText","stringify","download","blob","Blob","saveAs","prevProps","uuidv4","updatedNodes","optionIndex","findIndex","updatedOption","update","without","clearOptionOfRemovedNode","nodeId","updatedNode","updatedOptions","nodeIndex","uniq","removeNodeFromTracker","VERBS","aOrAn","word","firstLetter","head","includes","Narrator","currentNode","handleNonMatch","response","lookAroundDescription","getNext","words","split","verbOpt","findVerb","nounOpt","findNoun","handleMatch","noun","findNounById","stuffToDo","s","items","join","Chat","historyRef","enter","narrator","nextNode","history","botResponse","otherMessage","scrollTop","scrollHeight","i","humanStatement","botStatement","onKeyDown","Switcher","tab","icon","currentTab","initState","App","updateTab","reset","window","confirm","firstTrackedNode","localStorage","getItem","setItem","rel","href","Boolean","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"gXAuIeA,E,YAxGb,WAAYC,GAAiC,IAAD,8BAC1C,4CAAMA,KAFAC,IAAiCC,sBACG,EAyDpCC,cAAgB,SAACC,GACnB,EAAKH,IAAII,SACX,EAAKC,SAAS,CACZC,UAAU,EACVC,KAAMJ,EAAEK,MAAQ,EAAKR,IAAII,QAAQK,WACjCC,KAAMP,EAAEQ,MAAQ,EAAKX,IAAII,QAAQQ,aA9DK,EAmEpCC,aAAe,WACrB,EAAKR,SAAS,CAAEC,UAAU,KApEgB,EAuEpCQ,KAAO,SAACX,GACd,IAAMY,EAAIZ,EAAEK,MAAQ,EAAKQ,MAAMT,KACzBU,EAAId,EAAEQ,MAAQ,EAAKK,MAAMN,KAC3B,EAAKM,MAAMV,WACb,EAAKD,SAAS,CAAEU,IAAGE,MACnB,EAAKlB,MAAMmB,iBAAiBH,EAAGE,EAAG,EAAKE,QAAS,EAAKC,YA5Eb,EAgFpCD,MAAQ,wBAAc,YAAKnB,IAAII,eAAT,eAAkBiB,cAAe,GAhFnB,EAiFpCD,OAAS,wBAAc,YAAKpB,IAAII,eAAT,eAAkBkB,eAAgB,GA/E/D,EAAKN,MAAQ,CAAED,EAAG,EAAGE,EAAG,EAAGX,UAAU,EAAOC,KAAM,EAAGG,KAAM,GAFjB,E,iFAKhB,IAAD,OACzB,GAAuC,IAAnCa,KAAKxB,MAAMyB,aAAaC,OAA5B,CAKA,IAAMC,EAAaH,KAAKxB,MAAMyB,aAAaG,MACzC,SAAAC,GAAC,OAAIA,EAAEC,KAAO,EAAK9B,MAAM8B,MAE3B,QAAmBC,IAAfJ,EAAJ,CATyB,MAccK,aACrC,SAACC,EAAmBC,GAClB,IAAIC,EAAWF,EAAIE,SACfC,EAAWH,EAAIG,SACff,EAASY,EAAIZ,OAOjB,OALIa,EAAKhB,GAAKkB,IACZA,EAAWF,EAAKhB,EAChBG,EAASa,EAAKb,QAGT,CAAEc,WAAUC,WAAUf,YAE/B,CAAEc,SAAU,EAAGC,SAAU,EAAGf,OAAQ,GAbCW,CAcrCR,KAAKxB,MAAMyB,cAEPT,EA9BmB,EAcjBmB,SAiBFjB,EA/BmB,EAcPkB,SAdO,EAcGf,OAmB5BG,KAAKlB,SAAS,CAAEU,IAAGE,MAEnBM,KAAKxB,MAAMmB,iBAAiBH,EAAGE,EAAGM,KAAKJ,QAASI,KAAKH,UACrDgB,YAAW,kCAAM,EAAKpC,IAAII,eAAf,aAAM,EAAkBiC,yBA1BjCd,KAAKlB,SAAS,CAAEU,EAAGW,EAAWX,EAAGE,EAAGS,EAAWT,SAR/CM,KAAKxB,MAAMmB,iBAAiB,EAAG,EAAGK,KAAKJ,QAASI,KAAKH,Y,yCAsCvDrB,EACAiB,GAEIO,KAAKP,MAAMV,WAAaU,EAAMV,UAChCgC,SAASC,iBAAiB,YAAahB,KAAKT,MAC5CwB,SAASC,iBAAiB,UAAWhB,KAAKV,gBAChCU,KAAKP,MAAMV,UAAYU,EAAMV,WACvCgC,SAASE,oBAAoB,YAAajB,KAAKT,MAC/CwB,SAASE,oBAAoB,UAAWjB,KAAKV,iB,+BA8BhC,IACP4B,EAAalB,KAAKxB,MAAlB0C,SADM,EAEalB,KAAKP,MAAxBD,EAFM,EAENA,EAAGE,EAFG,EAEHA,EAAGX,EAFA,EAEAA,SAEd,OACE,yBACEoC,UAAWC,IAAW,gBAAiB,CACrC,0BAA2BrC,IAE7BsC,MAAO,CAAEC,KAAK,GAAD,OAAK9B,EAAL,MAAY+B,IAAI,GAAD,OAAK7B,EAAL,OAC5BjB,IAAKuB,KAAKvB,KAEV,yBAAK0C,UAAU,eAAeK,YAAaxB,KAAKrB,eAC9C,uBAAGwC,UAAU,oBAAoBM,MAAM,eAExCP,O,GAvGwBQ,IAAMC,WCdxBC,EANsC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnD,4BAAQV,UAAU,SAASU,QAASA,EAASJ,MAAM,YACjD,uBAAGN,UAAU,yBC0EFW,E,2MA/DNrC,MAAQ,CAAEsC,QAAQ,G,EAWjBC,aAAe,SAACpD,GACtBqD,QAAQC,IAAI,EAAK1D,MAAM2D,YAAY7B,IACnC,EAAKxB,SAAS,CAAEiD,QAAQ,IACxB,EAAKK,SAASxD,I,EAGRyD,YAAc,SAACzD,GACrB,EAAKE,SAAS,CAAEiD,QAAQ,IAExB,IAAMO,EAAkB,EAAK9D,MAAMyB,aAAaG,MAC9C,SAAAC,GAAC,OACCA,EAAEC,KAAO,EAAK9B,MAAM2D,YAAY7B,IAChCD,EAAEkC,OAAS,EAAK/D,MAAMgE,gBACtBnC,EAAEb,EAAIZ,EAAEK,OACRL,EAAEK,MAAQoB,EAAEb,EAAIa,EAAET,OAClBS,EAAEX,EAAId,EAAEQ,OACRR,EAAEQ,MAAQiB,EAAEX,EAAIW,EAAER,UAEtBoC,QAAQC,IAAII,GAERA,GACF,EAAK9D,MAAMiE,YAAYH,EAAgBhC,IAEzC,EAAK9B,MAAMkE,mB,EAGLC,UAAY,SAAC/D,GACf,EAAKa,MAAMsC,QACb,EAAKK,SAASxD,I,EAIVwD,SAAW,SAACxD,GAAmB,IAAD,EACF,EAAKJ,MAA/BoE,EAD4B,EAC5BA,SAAUT,EADkB,EAClBA,YACZU,EACS,QAAbD,EAAqBT,EAAYzC,EAAIyC,EAAYzC,EAAIyC,EAAYtC,OAEnE,EAAKrB,MAAM4D,SAAS,CAClBU,GAAI,EAAKtE,MAAM2D,YAAY3C,EAAI,EAAKhB,MAAM2D,YAAYvC,MAAQ,EAC9DiD,GAAIA,EACJE,GAAInE,EAAEK,MACN+D,GAAIpE,EAAEQ,S,kFAnDgBZ,EAAuBiB,GAC3CO,KAAKP,MAAMsC,SAAWtC,EAAMsC,QAC9BhB,SAASC,iBAAiB,YAAahB,KAAK2C,WAC5C5B,SAASC,iBAAiB,UAAWhB,KAAKqC,eAChCrC,KAAKP,MAAMsC,QAAUtC,EAAMsC,SACrChB,SAASE,oBAAoB,YAAajB,KAAK2C,WAC/C5B,SAASE,oBAAoB,UAAWjB,KAAKqC,gB,+BAiDhC,IACPnB,EAAalB,KAAKxB,MAAlB0C,SAER,OAAO,yBAAKM,YAAaxB,KAAKgC,cAAed,O,GA5DzBQ,IAAMC,WCOfsB,EAfgD,SAAC,GAAD,IAC7DV,EAD6D,EAC7DA,KACAW,EAF6D,EAE7DA,YACAC,EAH6D,EAG7DA,WAH6D,OAK7D,4BACEhC,UAAWC,IAAW,YAAa,CACjC,sBAAuBmB,IAASW,IAElCrB,QAAS,kBAAMsB,EAAWZ,KAEzBA,ICqBUa,EAhCiC,SAAC,GAI1C,IAHLC,EAGI,EAHJA,UACAC,EAEI,EAFJA,KACAC,EACI,EADJA,WAEMJ,EAAa,SAACZ,GAAD,OAAoBgB,EAAW,eAAKD,EAAN,CAAYf,WAE7D,OACE,yBAAKpB,UAAU,uBACXkC,GACA,kBAAC,EAAD,CACEd,KAAK,MACLW,YAAaI,EAAKf,KAClBY,WAAYA,IAGhB,kBAAC,EAAD,CACEZ,KAAK,SACLW,YAAaI,EAAKf,KAClBY,WAAYA,KAEZE,GACA,kBAAC,EAAD,CACEd,KAAK,QACLW,YAAaI,EAAKf,KAClBY,WAAYA,MCwDPK,EA7DqC,SAAC,GAAD,IAClDF,EADkD,EAClDA,KACAC,EAFkD,EAElDA,WACAE,EAHkD,EAGlDA,UACAC,EAJkD,EAIlDA,WACAC,EALkD,EAKlDA,uBACAxB,EANkD,EAMlDA,YACAlC,EAPkD,EAOlDA,aACAoD,EARkD,EAQlDA,UACAO,EATkD,EASlDA,gBACAxB,EAVkD,EAUlDA,SACAM,EAXkD,EAWlDA,gBAXkD,OAalD,kBAAC,EAAD,CACEzC,aAAcA,EACdK,GAAIgD,EAAKhD,GACTX,iBAAkB,SAACkE,EAAUC,EAAUlE,EAAOC,GAA5B,OAChB8D,EAAuBL,EAAKhD,GAAI,OAAQuD,EAAUC,EAAUlE,EAAOC,KAGrE,kBAAC,EAAD,CACE+C,SAAS,SACTR,SAAUA,EACVM,gBAAiBA,EACjBzC,aAAcA,EACdkC,YACEA,GAAe,CACb3C,EAAG,EACHE,EAAG,EACHE,MAAO,EACPC,OAAQ,EACRS,GAAIgD,EAAKhD,GACTiC,KAAM,QAGVC,eAAe,cACfC,YAAa,SAAAsB,GAAQ,OAAIH,EAAgBN,EAAMS,KAE/C,yBAAK5C,UAAU,QACb,8BACE6C,YAAY,kDACZC,MAAOX,EAAKY,UACZC,SAAU,SAAAvF,GAAC,OAAI2E,EAAW,eAAKD,EAAN,CAAYY,UAAWtF,EAAEwF,OAAOH,YAE3D,kBAAC,EAAD,CAAWV,WAAYA,EAAYD,KAAMA,EAAMD,UAAWA,IAC3C,WAAdC,EAAKf,MACJ,kBAAC,EAAD,CAAWV,QAAS,kBAAM4B,EAAUH,EAAKhD,QAEzC+C,GACA,4BACElC,UAAU,SACVM,MAAM,cACNI,QAAS,kBAAM6B,EAAWJ,KAE1B,uBAAGnC,UAAU,6BC/DVkD,EAXqC,SAAC,GAAD,IAClDC,EADkD,EAClDA,KACAC,EAFkD,EAElDA,QACAC,EAHkD,EAGlDA,SAHkD,OAKlD,yBAAKrD,UAAU,QACb,2BAAImD,IACFE,GAAY,kBAAC,EAAD,CAAW3C,QAAS,kBAAM0C,EAAQD,QCkFrCG,E,2MA7ELC,QAAU,SAACJ,GAAD,OAAgB,EAAK9F,MAAMkG,QAAQ,EAAKlG,MAAMmG,OAAQL,I,wEAEvD,IAAD,EAOVtE,KAAKxB,MALPmG,EAFY,EAEZA,OACAC,EAHY,EAGZA,aACAjB,EAJY,EAIZA,uBACAkB,EALY,EAKZA,aACA5E,EANY,EAMZA,aAEF,OACE,kBAAC,EAAD,CACEK,GAAIqE,EAAOrE,GACXL,aAAcA,EACdN,iBAAkB,SAACkE,EAAUC,EAAUlE,EAAOC,GAA5B,OAChB8D,EACEgB,EAAOrE,GACP,cACAuD,EACAC,EACAlE,EACAC,KAIJ,yBAAKsB,UAAU,UACb,yBAAKA,UAAU,cACb,2BACE8C,MAAOU,EAAOG,KACdd,YAAY,kCACZG,SAAU,SAAAY,GAAK,OACbH,EAAa,eAAKD,EAAN,CAAcG,KAAMC,EAAMX,OAAOH,YAGjD,6BACE,4BACE9C,UAAU,SACVM,MAAM,cACNI,QAAS,kBAAMgD,EAAaF,KAE5B,uBAAGxD,UAAU,2BAInB,yBAAKA,UAAU,SACb,kBAAC6D,EAAD,CACEV,KAAK,QACLC,QAASvE,KAAK0E,QACdF,cAA6BjE,IAAnBoE,EAAOM,UAEnB,kBAACD,EAAD,CACEV,KAAK,QACLC,QAASvE,KAAK0E,QACdF,cAA6BjE,IAAnBoE,EAAOO,UAEnB,kBAACF,EAAD,CACEV,KAAK,QACLC,QAASvE,KAAK0E,QACdF,cAA6BjE,IAAnBoE,EAAOQ,UAEnB,kBAACH,EAAD,CACEV,KAAK,OACLC,QAASvE,KAAK0E,QACdF,cAA4BjE,IAAlBoE,EAAOS,SAEnB,kBAACJ,EAAD,CACEV,KAAK,SACLC,QAASvE,KAAK0E,QACdF,cAA8BjE,IAApBoE,EAAOU,kB,GArEV3D,IAAMC,WCgBZ2D,G,MA3B4B,SAAC,GAAD,IAAGxC,EAAH,EAAGA,GAAID,EAAP,EAAOA,GAAIE,EAAX,EAAWA,GAAIC,EAAf,EAAeA,GAAIuC,EAAnB,EAAmBA,SAAnB,OACzC,yBAAK3F,MAAM,OAAOC,OAAO,OAAOsB,UAAU,eAAeE,MAAO,CAAEkE,aAChE,8BACE,4BACEjF,GAAG,QACHkF,YAAY,KACZC,aAAa,KACbC,KAAK,IACLC,KAAK,IACLC,OAAO,OACPC,YAAY,eAEZ,0BAAMC,EAAE,mBAAmBC,KAAK,cAGpC,0BACEjD,GAAIA,EACJD,GAAIA,EACJE,GAAIA,EACJC,GAAIA,EACJ7B,UAAU,OACV6E,OAAO,QACPC,UAAU,mBCJDC,E,iLAlBI,IAAD,EACiBlG,KAAKxB,MAA5B2D,EADM,EACNA,YAAagE,EADP,EACOA,MAEfC,EAAK,sBACNC,EAAmBlE,EAAagE,IAD1B,YAENG,EAA0BnE,EAAagE,KAG5C,OACE,oCACGC,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACT,kBAAC,EAAD,iBAAUD,EAAV,CAAgBE,IAAG,eAAUD,GAASlB,SAAS,sB,GAZrC7D,IAAMC,WA4BpB2E,EAA4B,SAChCnE,EACAgE,GAFgC,OAIhChE,EACGwE,SAAQ,SAAAC,GACP,IAAMjC,EAASwB,EAAMU,QAAQzG,MAAK,SAAA0G,GAAC,OAAIA,EAAExG,KAAOsG,EAAYtG,MAC5D,GAAIqE,EAAQ,CACV,IAAMoC,EAAQ,GA6Bd,OA5BIpC,EAAOM,SACT8B,EAAMC,KACJC,EAAuBtC,EAAOM,QAAS9C,EAAayE,EAAa,IAIjEjC,EAAOO,SACT6B,EAAMC,KACJC,EAAuBtC,EAAOO,QAAS/C,EAAayE,EAAa,IAIjEjC,EAAOQ,SACT4B,EAAMC,KACJC,EAAuBtC,EAAOQ,QAAShD,EAAayE,EAAa,IAGjEjC,EAAOS,QACT2B,EAAMC,KACJC,EAAuBtC,EAAOS,OAAQjD,EAAayE,EAAa,IAGhEjC,EAAOU,UACT0B,EAAMC,KACJC,EAAuBtC,EAAOU,SAAUlD,EAAayE,EAAa,IAI/DG,MAGVG,QAAO,SAAA7G,GAAC,YAAUE,IAANF,MAEX4G,EAAyB,SAC7B3G,EACA6B,EACAgF,EACAV,GAEA,IAAMW,EAAQjF,EAAY/B,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOA,KAC7C,OAAO8G,EAAQC,EAAeF,EAAmBC,EAAOX,QAASlG,GAG7D8F,EAAqB,SACzBlE,EACAgE,GAFyB,OAIzBhE,EACGwE,SAAQ,SAAAC,GACP,IAAMtD,EAAO6C,EAAMmB,MAAMlH,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOsG,EAAYtG,MACxD,GAAIgD,EACF,OAAOiE,EAAKpF,EAAamB,EAAMsD,MAGlCM,QAAO,SAAA7G,GAAC,YAAUE,IAANF,MAEXkH,EAAO,SACXpF,EACAmB,EACAsD,GAKA,OAH+BtD,EAAKkE,UACjCjB,KAAI,SAAAkB,GAAG,OAAItF,EAAY/B,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOmH,QAC1CP,QAAO,SAAA7G,GAAC,YAAUE,IAANF,KACAkG,KAAI,SAAAO,GAAC,OAAIY,EAASd,EAAaE,OAG1CY,EAAW,SAACd,EAA0Be,GAA3B,MAA2D,CAC1E7E,GAAI8D,EAAYpH,EAAIoH,EAAYhH,MAAQ,EACxCiD,GAAI+D,EAAYlH,EAAIkH,EAAY/G,OAChCkD,GAAI4E,EAAcnI,EAAImI,EAAc/H,MAAQ,EAC5CoD,GAAI2E,EAAcjI,IAGd2H,EAAiB,SACrBT,EACAe,EACAlB,GAHqB,MAIjB,CACJ3D,GAAI8D,EAAYpH,EAAKiH,EAAQ,EAAKG,EAAYhH,MAAQ,GAAMgH,EAAYhH,MACxEiD,GAAI+D,EAAYlH,EAAIkH,EAAY/G,OAChCkD,GAAI4E,EAAcnI,EAAImI,EAAc/H,MAAQ,EAC5CoD,GAAI2E,EAAcjI,IC3GLkI,EAVgD,SAAC,GAAD,IAC7DC,EAD6D,EAC7DA,QACA/E,EAF6D,EAE7DA,GACAD,EAH6D,EAG7DA,GACAE,EAJ6D,EAI7DA,GACAC,EAL6D,EAK7DA,GAL6D,OAO7D,oCAAG6E,GAAW,kBAAC,EAAD,CAAMtC,SAAS,WAAWzC,GAAIA,EAAID,GAAIA,EAAIE,GAAIA,EAAIC,GAAIA,MCgFvD8E,EAzDoC,SAAC,GAAD,IACjD3B,EADiD,EACjDA,MACAlG,EAFiD,EAEjDA,aACA8H,EAHiD,EAGjDA,YACAxE,EAJiD,EAIjDA,WACAK,EALiD,EAKjDA,gBACAgB,EANiD,EAMjDA,aACAjB,EAPiD,EAOjDA,uBACAF,EARiD,EAQjDA,UACAoB,EATiD,EASjDA,aACAH,EAViD,EAUjDA,QACAhB,EAXiD,EAWjDA,WACAsE,EAZiD,EAYjDA,gBACAC,EAbiD,EAajDA,SACA7F,EAdiD,EAcjDA,SACAM,EAfiD,EAejDA,gBAfiD,OAiBjD,6BACE,2BACEuB,MAAOkC,EAAM1E,MACbN,UAAU,QACV6C,YAAY,QACZG,SAAU,SAAAY,GAAK,OAAIgD,EAAYhD,EAAMX,OAAOH,UAE7CkC,EAAMmB,MAAMf,KAAI,SAACjD,EAAMmD,GAAP,OACf,kBAACyB,EAAD,CACExB,IAAKpD,EAAKhD,GACV6B,YAAalC,EAAaG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOgD,EAAKhD,MAClDL,aAAcA,EACdqD,KAAMA,EACNG,UAAWA,EACXF,WAAYA,EACZG,WAAYA,EACZC,uBAAwBA,EACxBC,gBAAiBA,EACjBxB,SAAUA,EACVM,gBAAiBA,EACjBW,UAAqB,IAAVoD,OAIdN,EAAMU,QAAQN,KAAI,SAAA5B,GAAM,OACvB,kBAAC,EAAD,CACEA,OAAQA,EACR+B,IAAK/B,EAAOrE,GACZsE,aAAcA,EACdC,aAAcA,EACdlB,uBAAwBA,EACxBe,QAASA,EACTzE,aAAcA,OAGlB,kBAAC,EAAD,CAAOkG,MAAOA,EAAOhE,YAAalC,IAClC,kBAAC,EAAD,eAAgB4H,QAASI,GAAcD,MC9F9BG,EAAW,SAACC,GAQvB,GAPAC,EAAeD,EAAK3G,OACpB6G,EAAcF,EAAKd,OACnBgB,EAAcF,EAAKvB,SAEnBuB,EAAKd,MAAMiB,QAAQC,GACnBJ,EAAKvB,QAAQ0B,QAAQE,GAEK,IAAtBL,EAAKd,MAAMpH,OACb,MAAM,IAAIwI,MAAM,8BAIdF,EAAe,SAAClF,GACpB,QAAa/C,IAAT+C,GAA+B,OAATA,EACxB,MAAM,IAAIoF,MAAM,gBAMlB,GAHAL,EAAe/E,EAAKhD,IACpB+H,EAAe/E,EAAKY,WAEF,WAAdZ,EAAKf,MAAmC,QAAde,EAAKf,MAAgC,UAAde,EAAKf,KACxD,MAAM,IAAImG,MAAM,iBAGlBJ,EAAchF,EAAKkE,WAEnBlE,EAAKkE,UAAUe,QAAQF,IAGnBI,EAAiB,SAAC9D,GACtB0D,EAAe1D,EAAOrE,IACtB+H,EAAe1D,EAAOG,MACtB6D,EAA0BhE,EAAOM,SACjC0D,EAA0BhE,EAAOO,SACjCyD,EAA0BhE,EAAOQ,SACjCwD,EAA0BhE,EAAOS,QACjCuD,EAA0BhE,EAAOU,WAG7BsD,EAA4B,SAACC,QACnBrI,IAAVqI,GAGJP,EAAeO,IAEXP,EAAiB,SAACO,GACtB,GAAqB,kBAAVA,EACT,MAAM,IAAIF,MAAM,iBAGdJ,EAAgB,SAACM,GACrB,IAAKC,MAAMC,QAAQF,GACjB,MAAM,IAAIF,MAAM,iB,QCwCLK,E,YA3Eb,WAAYvK,GAAsB,IAAD,8BAC/B,4CAAMA,KAgBAwK,aAAe,SAACZ,GACtB,EAAKtJ,SAAS,CAAEmK,YAAab,EAAMc,OAAO,EAAOC,QAAQ,IACzD,IACE,IAAMC,EAAaC,KAAKC,MAAMlB,GAC9BD,EAASiB,GACT,EAAK5K,MAAM+K,YAAYH,GACvB,MAAOxK,GACP,EAAKE,SAAS,CAAEoK,OAAO,MAxBM,EA4BzBM,KAAO,WACbC,UAAUC,UAAUC,UAAUN,KAAKO,UAAU,EAAKpL,MAAM2H,QACxD,EAAKrH,SAAS,CAAEqK,QAAQ,KA9BO,EAiCzBU,SAAW,WACjB,IAAIC,EAAO,IAAIC,KAAK,CAACV,KAAKO,UAAU,EAAKpL,MAAM2H,QAAS,CACtD5D,KAAM,6BAERyH,iBAAOF,EAAM,eAnCb,EAAKrK,MAAQ,CACXyJ,OAAO,EACPD,YAAaI,KAAKO,UAAUpL,EAAM2H,OAClCgD,QAAQ,GALqB,E,gFASPc,GACpBA,EAAU9D,QAAUnG,KAAKxB,MAAM2H,OACjCnG,KAAKlB,SAAS,CACZoK,OAAO,EACPD,YAAaI,KAAKO,UAAU5J,KAAKxB,MAAM2H,W,+BA2B5B,IAAD,SACyBnG,KAAKP,MAApCyJ,EADM,EACNA,MAAOD,EADD,EACCA,YAAaE,EADd,EACcA,OAC5B,OACE,yBAAKhI,UAAU,YACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,kBACX,4BAAQU,QAAS7B,KAAK6J,SAAU1I,UAAU,sBACxC,uBAAGA,UAAU,qBACL,IACV,4BAAQU,QAAS7B,KAAKwJ,KAAMrI,UAAU,sBACpC,uBAAGA,UAAU,iBACL,IACTgI,GAAU,UAEb,uBACEhI,UAAWC,IAAW,gBAAiB,CACrC,wBAAyB8H,KAF7B,SAKSA,GAAS,uBAAG/H,UAAU,yBAC3B+H,GAAS,uBAAG/H,UAAU,0BAG5B,yBAAKA,UAAU,gBACb,8BACEA,UAAU,kBACV8C,MAAOgF,EACP9E,SAAU,SAAAvF,GAAC,OAAI,EAAKoK,aAAapK,EAAEwF,OAAOH,gB,GApEhCvC,IAAMC,W,gCCbf+C,EAAU,SACrByB,EACAxB,EACAL,GAEA,IAAMgD,EAAQnB,EAAMmB,MACdhH,EAAK4J,cACLC,EAAoB,sBACrB7C,GADqB,CAExB,CAAE/E,KAAM,SAAU2B,UAAW,GAAI5D,KAAIkH,UAAW,MAG5C4C,EAAcjE,EAAMU,QAAQwD,WAAU,SAAAvD,GAAC,OAAIA,EAAExG,KAAOqE,EAAOrE,MAC3DgK,EAA0B,eAC3B3F,EAD2B,GAEjB,UAATL,GAAoB,CAAEW,QAAS3E,GAFL,GAGjB,UAATgE,GAAoB,CAAEY,QAAS5E,GAHL,GAIjB,WAATgE,GAAqB,CAAEe,SAAU/E,GAJP,GAKjB,SAATgE,GAAmB,CAAEc,OAAQ9E,GALH,GAMjB,UAATgE,GAAoB,CAAEa,QAAS7E,IAG/BuG,EAAU0D,YAAOH,EAAaE,EAAenE,EAAMU,SAEzD,OAAO,eAAKV,EAAZ,CAAmBmB,MAAO6C,EAActD,aAG7BnD,EAAa,SAACyC,EAAc7C,GACvC,IAAM6G,EAAeK,YAAQ,CAAClH,GAAO6C,EAAMmB,OACrCT,EAAUV,EAAMU,QAAQN,KAAI,SAAAO,GAChC,OAAO,eACFA,EADL,CAEE7B,QAASwF,EAAyBnH,EAAMwD,EAAE7B,SAC1CC,QAASuF,EAAyBnH,EAAMwD,EAAE5B,SAC1CC,QAASsF,EAAyBnH,EAAMwD,EAAE3B,SAC1CE,SAAUoF,EAAyBnH,EAAMwD,EAAEzB,UAC3CD,OAAQqF,EAAyBnH,EAAMwD,EAAE1B,aAG7C,OAAO,eAAKe,EAAZ,CAAmBmB,MAAO6C,EAActD,aAG7BhC,EAAe,SAACsB,EAAcxB,GACzC,IAAMkC,EAAU2D,YAAQ,CAAC7F,GAASwB,EAAMU,SAClCS,EAAQnB,EAAMmB,MAAMf,KAAI,SAAAlG,GAAC,sBAC1BA,EAD0B,CAE7BmH,UAAWnH,EAAEmH,UAAUN,QAAO,SAAA5G,GAAE,OAAIA,IAAOqE,EAAOrE,WAEpD,OAAO,eAAK6F,EAAZ,CAAmBmB,QAAOT,aAGtB4D,EAA2B,SAACnH,EAAYS,GAAb,OAC/BA,IAAaT,EAAKhD,QAAKC,EAAYwD,GAExBN,EAAY,SAAC0C,EAAcuE,GACtC,IAAM3G,EAAWmG,cACXrD,EAAUV,EAAMU,QAChBvD,EAAO6C,EAAMmB,MAAMlH,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOoK,KACtCC,EAAW,eAAQrH,EAAR,CAAckE,UAAU,GAAD,mBAAMlE,EAAKkE,WAAX,CAAsBzD,MACxD6G,EAAc,sBAAO/D,GAAP,CAAgB,CAAEvG,GAAIyD,EAAUe,KAAM,MAC1D,OAAO,eAAKvB,EAAW4C,EAAOwE,GAA9B,CAA4C9D,QAAS+D,KAG1CrH,EAAa,SAAC4C,EAAc7C,GACvC,IAAMgE,EAAQnB,EAAMmB,MACduD,EAAYvD,EAAM+C,WAAU,SAAAhK,GAAC,OAAIA,EAAEC,KAAOgD,EAAKhD,MAC/C6J,EAAeI,YAAOM,EAAWvH,EAAMgE,GAC7C,OAAO,eAAKnB,EAAZ,CAAmBmB,MAAO6C,KAGfvF,EAAe,SAACuB,EAAcxB,GACzC,IAAMkC,EAAUV,EAAMU,QAChBJ,EAAQI,EAAQwD,WAAU,SAAAvD,GAAC,OAAIA,EAAExG,KAAOqE,EAAOrE,MAC/CsK,EAAiBL,YAAO9D,EAAO9B,EAAQkC,GAC7C,OAAO,eAAKV,EAAZ,CAAmBU,QAAS+D,KAGjBhH,GAAkB,SAACuC,EAAc7C,EAAYS,GACxD,IAAM4G,EAAW,eACZrH,EADY,CAEfkE,UAAWsD,YAAK,GAAD,mBAAKxH,EAAKkE,WAAV,CAAqBzD,OAGtC,OAAO,eAAKR,EAAW4C,EAAOwE,KCrFnBI,GAAwB,SACnC5I,EACA7B,GAFmC,OAGjB6B,EAAY+E,QAAO,SAAA7G,GAAC,OAAIA,EAAEC,KAAOA,M,SCuCxC0K,GAAgB,CAAC,QAAS,QAAS,QAAS,OAAQ,U,SC2B3DC,GAAQ,SAACC,GACb,IACMC,EAAcC,aAAKF,GAEzB,MAHe,QAGJG,SAASF,GACX,KAEF,KAGMG,GA7Eb,WAAoBnF,EAAsBoF,GAAoB,IAAD,gCAAzCpF,QAAyC,KAAnBoF,cAAmB,KAEtDC,eAAiB,SAACC,GACvB,OAAIA,EAASJ,SAAS,QACb,+DAGLI,EAASJ,SAAS,eACb,EAAKK,wBAGP,2EAXoD,KActDC,QAAU,SAACF,GAChB,IAAMG,EAAQH,EAASI,MAAM,KAEvBC,EAAU,EAAKC,SAASH,GACxBI,EAAU,EAAKC,SAASL,GAE9B,YAAgBrL,IAAZuL,QAAqCvL,IAAZyL,EACpB,EAAKE,YAAYJ,EAASE,QAEjC,GAvByD,KA2BrDE,YAAc,SAAC5H,EAAY6H,GACjC,OAAQ7H,GACN,IAAK,SACH,OAAO,EAAK8H,aAAaD,EAAK9G,UAChC,IAAK,OACH,OAAO,EAAK+G,aAAaD,EAAK/G,QAChC,IAAK,QACH,OAAO,EAAKgH,aAAaD,EAAKhH,SAChC,IAAK,QACH,OAAO,EAAKiH,aAAaD,EAAKlH,SAChC,IAAK,QACH,OAAO,EAAKmH,aAAaD,EAAKjH,WAtCyB,KA0CrDkH,aAAe,SAAC9L,GAAD,OACrB,EAAK6F,MAAMmB,MAAMlH,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOA,MA3CuB,KA6CrD+L,UAAY,kBAClB,EAAKlG,MAAMU,QAAQK,QAAO,SAAAvC,GAAM,OAC9B,EAAK4G,YAAY/D,UAAU6D,SAAS1G,EAAOrE,QA/Cc,KAkDrDyL,SAAW,SAACH,GAAD,OACjBZ,GAAM5K,MAAK,SAAAkE,GAAI,OAAIsH,EAAMP,SAAS/G,OAnDyB,KAqDrD2H,SAAW,SAACL,GAAD,OACjB,EAAKS,YAAYjM,MAAK,SAAAkM,GAAC,OAAIV,EAAMP,SAASiB,EAAExH,UAtDe,KAwDrD4G,sBAAwB,WAC9B,IAAMa,EAAQ,EAAKF,YAAY9F,KAC7B,SAAAQ,GAAK,gBAAOkE,GAAMlE,EAAMjC,MAAnB,YAA4BiC,EAAMjC,SAEzC,OAAqB,IAAjByH,EAAMrM,OACD,+BAEH,eAAN,OAAsBqM,EAAMC,KAAK,SAAjC,OC4CWC,I,kBA1Fb,WAAYjO,GAAmB,IAAD,8BAC5B,4CAAMA,KAHAkO,WAAwChO,sBAElB,EAoBtBiO,MAAQ,WACd,IAAMC,EAAW,IAAItB,GAAS,EAAK9M,MAAM2H,MAAO,EAAK1G,MAAM8L,aACrDsB,EAAWD,EAASjB,QAAQ,EAAKlM,MAAMgM,UAE7C,QAAiBlL,IAAbsM,EAAwB,CAC1B,IAAMC,EAAO,sBACR,EAAKrN,MAAMqN,SADH,CAEX,CAAC,EAAKrN,MAAMgM,SAAUoB,EAAS3I,aAGjC,EAAKpF,SAAS,CACZyM,YAAasB,EACbpB,SAAU,GACVqB,gBAEG,CACL,IAAMC,EAAcH,EAASpB,eAAe,EAAK/L,MAAMgM,UACjDqB,EAAO,sBACR,EAAKrN,MAAMqN,SADH,CAEX,CAAC,EAAKrN,MAAMgM,SAAUsB,KAGxB,EAAKjO,SAAS,CAAEkO,aAAcD,EAAatB,SAAU,GAAIqB,YAE3DjM,YAAW,WACL,EAAK6L,WAAW7N,UAClB,EAAK6N,WAAW7N,QAAQoO,UAAY,EAAKP,WAAW7N,QAAQqO,kBA5ChE,EAAKzN,MAAQ,CACX8L,YAAa/M,EAAM2H,MAAMmB,MAAM,GAC/BmE,SAAU,GACVqB,QAAS,CAAC,CAAC,GAAItO,EAAM2H,MAAMmB,MAAM,GAAGpD,aALV,E,gFASJ+F,GACpBA,EAAU9D,QAAUnG,KAAKxB,MAAM2H,OACjCnG,KAAKlB,SAAS,CACZyM,YAAavL,KAAKxB,MAAM2H,MAAMmB,MAAM,GACpCmE,SAAU,GACVuB,kBAAczM,EACduM,QAAS,CAAC,CAAC,GAAI9M,KAAKxB,MAAM2H,MAAMmB,MAAM,GAAGpD,gB,+BAoC9B,IAAD,OACNiC,EAAUnG,KAAKxB,MAAf2H,MADM,EAEgBnG,KAAKP,MAA3BgM,EAFM,EAENA,SAAUqB,EAFJ,EAEIA,QAClB,OACE,yBAAK3L,UAAU,QACb,4BAAKgF,EAAM1E,OACX,yBAAKN,UAAU,gBACb,yBAAKA,UAAU,sBAAsB1C,IAAKuB,KAAK0M,YAC5CI,EAAQvG,KAAI,WAAiC4G,GAAjC,wBAAEC,EAAF,KAAkBC,EAAlB,YACX,kBAAC,WAAD,CAAU3G,IAAG,mBAAcyG,IACzB,uBAAGhM,UAAU,mBAAmBiM,GAChC,uBACEjM,UAAWC,IAAW,gBAAiB,CACrC,eAAgB+L,EAAI,IAAML,EAAQ5M,UAGlB,KAAjBmN,EACG,mEACAA,SAOd,2BACEpJ,MAAOwH,EACPzH,YAAY,mCACZ7C,UAAU,cACVgD,SAAU,SAAAvF,GAAC,OACT,EAAKE,SAAS,CAAE2M,SAAU7M,EAAEwF,OAAOH,MAAO+I,aAAc,MAE1DM,UAAW,SAAA1O,GAAC,MAAe,UAAVA,EAAE8H,IAAkB,EAAKiG,aAAUpM,U,GAtF3CmB,IAAMC,YCSV4L,GAjBoC,SAAC,GAAD,IACjDhD,EADiD,EACjDA,OACAiD,EAFiD,EAEjDA,IACAC,EAHiD,EAGjDA,KACAC,EAJiD,EAIjDA,WAJiD,OAMjD,4BACEvM,UAAWC,IAAW,WAAY,CAChC,qBAAsBoM,IAAQE,IAEhCjM,MAAM,OACNI,QAAS,kBAAM0I,EAAOiD,KAEtB,uBAAGrM,UAAWsM,MCkBZE,GAAsB,CAC1BH,IAAK,QACLrH,MAAO,CACL1E,MAAO,GACP6F,MAAO,CAAC,CAAEpD,UAAW,GAAI3B,KAAM,SAAUiF,UAAW,GAAIlH,GALxC,eAMhBuG,QAAS,IAEX1E,YAAa,GACb8F,UAAU,EACVD,gBAAiB,CAAElF,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGC,GAAI,IAmL/B4K,G,2MA/KNnO,MAAkBkO,G,EAEjBE,UAAY,SAACL,GAAD,OAAc,EAAK1O,SAAS,CAAE0O,S,EAC1CzF,YAAc,SAACtG,GAAD,OACpB,EAAK3C,SAAS,CAAEqH,MAAM,eAAM,EAAK1G,MAAM0G,MAAlB,CAAyB1E,a,EACxC8B,WAAa,SAACD,GACpB,EAAKxE,SAAS,CAAEqH,MAAO5C,EAAW,EAAK9D,MAAM0G,MAAO7C,M,EAqB9CK,uBAAyB,SAC/BrD,EACAiC,EACA/C,EACAE,EACAE,EACAC,GACI,IACIsC,EAAgB,EAAK1C,MAArB0C,YACFsE,EAAQtE,EAAYkI,WAAU,SAAAhK,GAAC,OAAIA,EAAEC,KAAOA,KAC5CgD,EAAO,CAAEhD,KAAId,IAAGE,IAAG6C,OAAM3C,QAAOC,WACvB,IAAX4G,EACF,EAAK3H,SAAS,CAAEqD,YAAY,GAAD,mBAAMA,GAAN,CAAmBmB,MAE9C,EAAKxE,SAAS,CAAEqD,YAAaoI,YAAO9D,EAAOnD,EAAMnB,M,EAI7CuC,QAAU,SAACC,EAAqBL,GACtC,EAAKxF,SAAS,CAAEqH,MAAOzB,EAAQ,EAAKjF,MAAM0G,MAAOxB,EAAQL,M,EAGnDZ,WAAa,SAACJ,GACpB,EAAKxE,SAAS,CACZqH,MAAOzC,EAAW,EAAKjE,MAAM0G,MAAO7C,GACpCnB,YAAa4I,GAAsB,EAAKtL,MAAM0C,YAAamB,EAAKhD,O,EAI5DuE,aAAe,SAACF,GACtB,EAAK7F,SAAS,CACZqH,MAAOtB,EAAa,EAAKpF,MAAM0G,MAAOxB,GACtCxC,YAAa4I,GAAsB,EAAKtL,MAAM0C,YAAawC,EAAOrE,O,EAG9DmD,UAAY,SAACiH,GACnB,EAAKnB,YAAY9F,EAAU,EAAKhE,MAAM0G,MAAOuE,K,EAGvC9F,aAAe,SAACD,GACtB,EAAK4E,YAAY3E,EAAa,EAAKnF,MAAM0G,MAAOxB,K,EAG1C4E,YAAc,SAACpD,GAAD,OAAkB,EAAKrH,SAAS,CAAEqH,W,EAEhDvC,gBAAkB,SAACN,EAAYS,GACrC,EAAKwF,YAAY3F,GAAgB,EAAKnE,MAAM0G,MAAO7C,EAAMS,K,EAGnD3B,SAAW,SAAC4F,GAAD,OACjB,EAAKlJ,SAAS,CAAEmJ,UAAU,EAAMD,qB,EAC1BtF,gBAAkB,kBAAM,EAAK5D,SAAS,CAAEmJ,UAAU,K,EAElD6F,MAAQ,WACd,GAAIC,OAAOC,QAAQ,yCAA0C,CAC3D,IAAMC,EAAmB,EAAKxO,MAAM0C,YAAY/B,MAC9C,SAAAC,GAAC,MAjGW,eAiGPA,EAAEC,MAET,EAAKxB,SAAL,eACK6O,GADL,CAEExL,YAAa8L,EAAmB,CAACA,GAAoB,Q,mFA7EzD,IAAM9H,EAAQ+H,aAAaC,QAAQ,SAEnC,GAAIhI,EACF,IACE,IAAMiD,EAAaC,KAAKC,MAAMnD,GAC9BgC,EAASiB,EAAWjD,OACpBnG,KAAKlB,SAASsK,GACd,MAAOxK,GACPqD,QAAQC,IAAI,6C,2CAMhBgM,aAAaE,QAAQ,QAAS/E,KAAKO,UAAU5J,KAAKP,U,+BAoEnC,IAAD,EACiDO,KAAKP,MAA5D+N,EADM,EACNA,IAAKrH,EADC,EACDA,MAAOhE,EADN,EACMA,YAAa8F,EADnB,EACmBA,SAAUD,EAD7B,EAC6BA,gBAE3C,OACE,yBAAK7G,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,gBACb,kBAAC,GAAD,CACEqM,IAAI,QACJjD,OAAQvK,KAAK6N,UACbJ,KAAK,iBACLC,WAAYF,IAEd,kBAAC,GAAD,CACEA,IAAI,OACJjD,OAAQvK,KAAK6N,UACbJ,KAAK,cACLC,WAAYF,IAEd,kBAAC,GAAD,CACEA,IAAI,OACJjD,OAAQvK,KAAK6N,UACbJ,KAAK,eACLC,WAAYF,IAEd,kBAAC,GAAD,CACEA,IAAI,OACJjD,OAAQvK,KAAK6N,UACbJ,KAAK,cACLC,WAAYF,KAGhB,4BAAQrM,UAAU,QAAQM,MAAM,QAAQI,QAAS7B,KAAK8N,OACpD,uBAAG3M,UAAU,sBAIjB,yBAAKA,UAAmB,UAARqM,EAAkB,GAAK,eACrC,kBAAC,EAAD,CACErH,MAAOA,EACPlG,aAAckC,EACd4F,YAAa/H,KAAK+H,YAClBxE,WAAYvD,KAAKuD,WACjBG,WAAY1D,KAAK0D,WACjBmB,aAAc7E,KAAK6E,aACnBpB,UAAWzD,KAAKyD,UAChBiB,QAAS1E,KAAK0E,QACdE,aAAc5E,KAAK4E,aACnBhB,gBAAiB5D,KAAK4D,gBACtBD,uBAAwB3D,KAAK2D,uBAC7BsE,SAAUA,EACVD,gBAAiBA,EACjB5F,SAAUpC,KAAKoC,SACfM,gBAAiB1C,KAAK0C,mBAG1B,yBAAKvB,UAAmB,SAARqM,EAAiB,GAAK,eACpC,kBAAC,EAAD,CAASrH,MAAOA,EAAOoD,YAAavJ,KAAKuJ,eAE3C,yBAAKpI,UAAmB,SAARqM,EAAiB,GAAK,eACpC,kBAAC,GAAD,CAAMrH,MAAOA,KAEf,yBAAKhF,UAAmB,SAARqM,EAAiB,GAAK,eACpC,sDACA,8FACA,mDACA,kEACA,6BACE,uBACErM,UAAU,OACViD,OAAO,SACPiK,IAAI,sBACJC,KAAK,kDAEL,uBAAGnN,UAAU,0B,GAvKTO,IAAMC,WCzCJ4M,QACW,cAA7BR,OAAOS,SAASC,UAEe,UAA7BV,OAAOS,SAASC,UAEhBV,OAAOS,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAAS7N,SAAS8N,eAAe,SDqI3C,kBAAmBpF,WACrBA,UAAUqF,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjG,GACLjH,QAAQiH,MAAMA,EAAMkG,c","file":"static/js/main.e769ffb5.chunk.js","sourcesContent":["import React, { createRef, RefObject, ReactNode } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { NodeTracker } from \"../types\";\r\nimport { reduce } from \"ramda\";\r\n\r\ninterface DraggableGraphNodeProps {\r\n  children: ReactNode;\r\n  onUpdatePosition(x: number, y: number, width: number, height: number): void;\r\n  nodeTrackers: NodeTracker[];\r\n  id: string;\r\n}\r\n\r\ninterface NextPosition {\r\n  biggestX: number;\r\n  biggestY: number;\r\n  height: number;\r\n}\r\n\r\ninterface DraggableGraphNodeState {\r\n  x: number;\r\n  y: number;\r\n  dragging: boolean;\r\n  relX: number;\r\n  relY: number;\r\n}\r\n\r\nclass DraggableGraphNode extends React.Component<\r\n  DraggableGraphNodeProps,\r\n  DraggableGraphNodeState\r\n> {\r\n  private ref: RefObject<HTMLDivElement> = createRef();\r\n  constructor(props: DraggableGraphNodeProps) {\r\n    super(props);\r\n    this.state = { x: 0, y: 0, dragging: false, relX: 0, relY: 0 };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    if (this.props.nodeTrackers.length === 0) {\r\n      this.props.onUpdatePosition(0, 0, this.width(), this.height());\r\n      return;\r\n    }\r\n\r\n    const maybeEntry = this.props.nodeTrackers.find(\r\n      n => n.id === this.props.id\r\n    );\r\n    if (maybeEntry !== undefined) {\r\n      this.setState({ x: maybeEntry.x, y: maybeEntry.y });\r\n      return;\r\n    }\r\n\r\n    const { biggestX, biggestY, height } = reduce<NodeTracker, NextPosition>(\r\n      (acc: NextPosition, next: NodeTracker) => {\r\n        let biggestX = acc.biggestX;\r\n        let biggestY = acc.biggestY;\r\n        let height = acc.height;\r\n\r\n        if (next.y >= biggestY) {\r\n          biggestY = next.y;\r\n          height = next.height;\r\n        }\r\n\r\n        return { biggestX, biggestY, height };\r\n      },\r\n      { biggestX: 0, biggestY: 0, height: 0 }\r\n    )(this.props.nodeTrackers);\r\n\r\n    const x = biggestX;\r\n    const y = biggestY + height;\r\n\r\n    this.setState({ x, y });\r\n\r\n    this.props.onUpdatePosition(x, y, this.width(), this.height());\r\n    setTimeout(() => this.ref.current?.scrollIntoView());\r\n  }\r\n\r\n  public componentDidUpdate(\r\n    props: DraggableGraphNodeProps,\r\n    state: DraggableGraphNodeState\r\n  ) {\r\n    if (this.state.dragging && !state.dragging) {\r\n      document.addEventListener(\"mousemove\", this.drag);\r\n      document.addEventListener(\"mouseup\", this.stopDragging);\r\n    } else if (!this.state.dragging && state.dragging) {\r\n      document.removeEventListener(\"mousemove\", this.drag);\r\n      document.removeEventListener(\"mouseup\", this.stopDragging);\r\n    }\r\n  }\r\n\r\n  private startDragging = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (this.ref.current) {\r\n      this.setState({\r\n        dragging: true,\r\n        relX: e.pageX - this.ref.current.offsetLeft,\r\n        relY: e.pageY - this.ref.current.offsetTop\r\n      });\r\n    }\r\n  };\r\n\r\n  private stopDragging = () => {\r\n    this.setState({ dragging: false });\r\n  };\r\n\r\n  private drag = (e: MouseEvent) => {\r\n    const x = e.pageX - this.state.relX;\r\n    const y = e.pageY - this.state.relY;\r\n    if (this.state.dragging) {\r\n      this.setState({ x, y });\r\n      this.props.onUpdatePosition(x, y, this.width(), this.height());\r\n    }\r\n  };\r\n\r\n  private width = (): number => this.ref.current?.clientWidth || 0;\r\n  private height = (): number => this.ref.current?.clientHeight || 0;\r\n\r\n  public render() {\r\n    const { children } = this.props;\r\n    const { x, y, dragging } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={classnames(\"draggable-div\", {\r\n          \"draggable-div--dragging\": dragging\r\n        })}\r\n        style={{ left: `${x}px`, top: `${y}px` }}\r\n        ref={this.ref}\r\n      >\r\n        <div className=\"drag-wrapper\" onMouseDown={this.startDragging}>\r\n          <i className=\"fas fa-arrows-alt\" title=\"move node\"></i>\r\n        </div>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DraggableGraphNode;\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\ninterface NodeAdderProps {\r\n  onClick(): void;\r\n}\r\n\r\nconst NodeAdder: FunctionComponent<NodeAdderProps> = ({ onClick }) => (\r\n  <button className=\"button\" onClick={onClick} title=\"add node\">\r\n    <i className=\"fas fa-plus-circle\"></i>\r\n  </button>\r\n);\r\n\r\nexport default NodeAdder;\r\n","import React, { ReactNode } from \"react\";\r\nimport { NodeTracker, NodeTrackerType, LineCoordinates } from \"../types\";\r\n\r\ninterface ConnectorProps {\r\n  children: ReactNode;\r\n  nodeTracker: NodeTracker;\r\n  nodeTrackers: NodeTracker[];\r\n  drawFrom: \"bottom\" | \"top\";\r\n  canCollideWith: NodeTrackerType;\r\n  onCollision(id: string): void;\r\n  drawLine(lineCoordinates: LineCoordinates): void;\r\n  stopDrawingLine(): void;\r\n}\r\n\r\ninterface ConnectorState {\r\n  active: boolean;\r\n}\r\n\r\nclass Connector extends React.Component<ConnectorProps, ConnectorState> {\r\n  public state = { active: false };\r\n  public componentDidUpdate(props: ConnectorProps, state: ConnectorState) {\r\n    if (this.state.active && !state.active) {\r\n      document.addEventListener(\"mousemove\", this.mouseMove);\r\n      document.addEventListener(\"mouseup\", this.stopDrawing);\r\n    } else if (!this.state.active && state.active) {\r\n      document.removeEventListener(\"mousemove\", this.mouseMove);\r\n      document.removeEventListener(\"mouseup\", this.stopDrawing);\r\n    }\r\n  }\r\n\r\n  private startDrawing = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    console.log(this.props.nodeTracker.id);\r\n    this.setState({ active: true });\r\n    this.drawLine(e as any);\r\n  };\r\n\r\n  private stopDrawing = (e: MouseEvent) => {\r\n    this.setState({ active: false });\r\n\r\n    const overlappingNode = this.props.nodeTrackers.find(\r\n      n =>\r\n        n.id !== this.props.nodeTracker.id &&\r\n        n.type === this.props.canCollideWith &&\r\n        n.x < e.pageX &&\r\n        e.pageX < n.x + n.width &&\r\n        n.y < e.pageY &&\r\n        e.pageY < n.y + n.height\r\n    );\r\n    console.log(overlappingNode);\r\n\r\n    if (overlappingNode) {\r\n      this.props.onCollision(overlappingNode.id);\r\n    }\r\n    this.props.stopDrawingLine();\r\n  };\r\n\r\n  private mouseMove = (e: MouseEvent) => {\r\n    if (this.state.active) {\r\n      this.drawLine(e);\r\n    }\r\n  };\r\n\r\n  private drawLine = (e: MouseEvent) => {\r\n    const { drawFrom, nodeTracker } = this.props;\r\n    const y1 =\r\n      drawFrom === \"top\" ? nodeTracker.y : nodeTracker.y + nodeTracker.height;\r\n\r\n    this.props.drawLine({\r\n      x1: this.props.nodeTracker.x + this.props.nodeTracker.width / 2,\r\n      y1: y1,\r\n      x2: e.pageX,\r\n      y2: e.pageY\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    const { children } = this.props;\r\n\r\n    return <div onMouseDown={this.startDrawing}>{children}</div>;\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { NodeType } from \"../types\";\r\n\r\ninterface NodeTypeButtonProps {\r\n  type: NodeType;\r\n  currentType: NodeType;\r\n  updateType(type: NodeType): void;\r\n}\r\n\r\nconst NodeTypeButton: FunctionComponent<NodeTypeButtonProps> = ({\r\n  type,\r\n  currentType,\r\n  updateType\r\n}) => (\r\n  <button\r\n    className={classnames(\"node-type\", {\r\n      \"node-type--selected\": type === currentType\r\n    })}\r\n    onClick={() => updateType(type)}\r\n  >\r\n    {type}\r\n  </button>\r\n);\r\n\r\nexport default NodeTypeButton;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Node, NodeType } from \"../types\";\r\nimport NodeTypeButton from \"./NodeTypeButton\";\r\n\r\ninterface NodeTypes {\r\n  startNode: boolean;\r\n  node: Node;\r\n  updateNode(node: Node): void;\r\n}\r\n\r\nconst NodeTypes: FunctionComponent<NodeTypes> = ({\r\n  startNode,\r\n  node,\r\n  updateNode\r\n}) => {\r\n  const updateType = (type: NodeType) => updateNode({ ...node, type });\r\n\r\n  return (\r\n    <div className=\"node-type--wrapper\">\r\n      {!startNode && (\r\n        <NodeTypeButton\r\n          type=\"Win\"\r\n          currentType={node.type}\r\n          updateType={updateType}\r\n        />\r\n      )}\r\n      <NodeTypeButton\r\n        type=\"Normal\"\r\n        currentType={node.type}\r\n        updateType={updateType}\r\n      />\r\n      {!startNode && (\r\n        <NodeTypeButton\r\n          type=\"Death\"\r\n          currentType={node.type}\r\n          updateType={updateType}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NodeTypes;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Node, NodeTracker, LineCoordinates } from \"../types\";\r\n\r\nimport DraggableGraphNode from \"./DraggableGraphNode\";\r\nimport NodeAdder from \"./NodeAdder\";\r\nimport Connector from \"./Connector\";\r\nimport NodeTypes from \"./NodeTypes\";\r\n\r\ninterface NodeProps {\r\n  node: Node;\r\n  nodeTracker?: NodeTracker;\r\n  nodeTrackers: NodeTracker[];\r\n  startNode: boolean;\r\n  updateNode(node: Node): void;\r\n  removeNode(node: Node): void;\r\n  addOption(nodeId: string): void;\r\n  connectToOption(node: Node, optionId: string): void;\r\n  addOrUpdateNodeTracker(\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): void;\r\n\r\n  drawLine(lineCoordinates: LineCoordinates): void;\r\n  stopDrawingLine(): void;\r\n}\r\n\r\nconst NodeComponent: FunctionComponent<NodeProps> = ({\r\n  node,\r\n  updateNode,\r\n  addOption,\r\n  removeNode,\r\n  addOrUpdateNodeTracker,\r\n  nodeTracker,\r\n  nodeTrackers,\r\n  startNode,\r\n  connectToOption,\r\n  drawLine,\r\n  stopDrawingLine\r\n}) => (\r\n  <DraggableGraphNode\r\n    nodeTrackers={nodeTrackers}\r\n    id={node.id}\r\n    onUpdatePosition={(updatedX, updatedY, width, height) =>\r\n      addOrUpdateNodeTracker(node.id, \"Node\", updatedX, updatedY, width, height)\r\n    }\r\n  >\r\n    <Connector\r\n      drawFrom=\"bottom\"\r\n      drawLine={drawLine}\r\n      stopDrawingLine={stopDrawingLine}\r\n      nodeTrackers={nodeTrackers}\r\n      nodeTracker={\r\n        nodeTracker || {\r\n          x: 0,\r\n          y: 0,\r\n          width: 0,\r\n          height: 0,\r\n          id: node.id,\r\n          type: \"Node\"\r\n        }\r\n      }\r\n      canCollideWith=\"StoryOption\"\r\n      onCollision={optionId => connectToOption(node, optionId)}\r\n    >\r\n      <div className=\"node\">\r\n        <textarea\r\n          placeholder=\"Add a statement e.g. You walk into a dark room.\"\r\n          value={node.statement}\r\n          onChange={e => updateNode({ ...node, statement: e.target.value })}\r\n        />\r\n        <NodeTypes updateNode={updateNode} node={node} startNode={startNode} />\r\n        {node.type === \"Normal\" && (\r\n          <NodeAdder onClick={() => addOption(node.id)} />\r\n        )}\r\n        {!startNode && (\r\n          <button\r\n            className=\"button\"\r\n            title=\"remove node\"\r\n            onClick={() => removeNode(node)}\r\n          >\r\n            <i className=\"fas fa-minus-circle\"></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Connector>\r\n  </DraggableGraphNode>\r\n);\r\nexport default NodeComponent;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Verb } from \"../types\";\r\nimport NodeAdder from \"./NodeAdder\";\r\n\r\ninterface VerbProps {\r\n  verb: Verb;\r\n  addVerb(verb: Verb): void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst VerbComponent: FunctionComponent<VerbProps> = ({\r\n  verb,\r\n  addVerb,\r\n  disabled\r\n}) => (\r\n  <div className=\"verb\">\r\n    <p>{verb}</p>\r\n    {!disabled && <NodeAdder onClick={() => addVerb(verb)} />}\r\n  </div>\r\n);\r\n\r\nexport default VerbComponent;\r\n","import React from \"react\";\r\nimport { StoryOption, Verb, NodeTracker } from \"../types\";\r\nimport DraggableGraphNode from \"./DraggableGraphNode\";\r\nimport VerbComponent from \"./Verb\";\r\n\r\ninterface OptionProps {\r\n  option: StoryOption;\r\n  updateOption(option: StoryOption): void;\r\n  removeOption(option: StoryOption): void;\r\n  addOrUpdateNodeTracker(\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): void;\r\n  addNode(option: StoryOption, verb: Verb): void;\r\n  nodeTrackers: NodeTracker[];\r\n}\r\n\r\nclass Option extends React.Component<OptionProps> {\r\n  private addNode = (verb: Verb) => this.props.addNode(this.props.option, verb);\r\n\r\n  public render() {\r\n    const {\r\n      option,\r\n      updateOption,\r\n      addOrUpdateNodeTracker,\r\n      removeOption,\r\n      nodeTrackers\r\n    } = this.props;\r\n    return (\r\n      <DraggableGraphNode\r\n        id={option.id}\r\n        nodeTrackers={nodeTrackers}\r\n        onUpdatePosition={(updatedX, updatedY, width, height) =>\r\n          addOrUpdateNodeTracker(\r\n            option.id,\r\n            \"StoryOption\",\r\n            updatedX,\r\n            updatedY,\r\n            width,\r\n            height\r\n          )\r\n        }\r\n      >\r\n        <div className=\"option\">\r\n          <div className=\"option-top\">\r\n            <input\r\n              value={option.item}\r\n              placeholder=\"item to interact with e.g. book\"\r\n              onChange={event =>\r\n                updateOption({ ...option, item: event.target.value })\r\n              }\r\n            />\r\n            <div>\r\n              <button\r\n                className=\"button\"\r\n                title=\"remove node\"\r\n                onClick={() => removeOption(option)}\r\n              >\r\n                <i className=\"fas fa-minus-circle\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"verbs\">\r\n            <VerbComponent\r\n              verb=\"taste\"\r\n              addVerb={this.addNode}\r\n              disabled={option.tasteId !== undefined}\r\n            />\r\n            <VerbComponent\r\n              verb=\"touch\"\r\n              addVerb={this.addNode}\r\n              disabled={option.touchId !== undefined}\r\n            />\r\n            <VerbComponent\r\n              verb=\"smell\"\r\n              addVerb={this.addNode}\r\n              disabled={option.smellId !== undefined}\r\n            />\r\n            <VerbComponent\r\n              verb=\"look\"\r\n              addVerb={this.addNode}\r\n              disabled={option.lookId !== undefined}\r\n            />\r\n            <VerbComponent\r\n              verb=\"listen\"\r\n              addVerb={this.addNode}\r\n              disabled={option.listenId !== undefined}\r\n            />\r\n          </div>\r\n        </div>\r\n      </DraggableGraphNode>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Option;\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\ninterface LineProps {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n  position: \"fixed\" | \"absolute\";\r\n}\r\n\r\nconst Line: FunctionComponent<LineProps> = ({ x1, y1, x2, y2, position }) => (\r\n  <svg width=\"100%\" height=\"100%\" className=\"line-wrapper\" style={{ position }}>\r\n    <defs>\r\n      <marker\r\n        id=\"arrow\"\r\n        markerWidth=\"10\"\r\n        markerHeight=\"10\"\r\n        refX=\"8\"\r\n        refY=\"3\"\r\n        orient=\"auto\"\r\n        markerUnits=\"strokeWidth\"\r\n      >\r\n        <path d=\"M0,0 L0,6 L9,3 z\" fill=\"#c0ffe9\" />\r\n      </marker>\r\n    </defs>\r\n    <line\r\n      x1={x1}\r\n      y1={y1}\r\n      x2={x2}\r\n      y2={y2}\r\n      className=\"line\"\r\n      stroke=\"black\"\r\n      markerEnd=\"url(#arrow)\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default Line;\r\n","import React from \"react\";\r\nimport Line from \"./Line\";\r\nimport { NodeTracker, Story, Node } from \"../types\";\r\n\r\ninterface LinesProps {\r\n  nodeTracker: NodeTracker[];\r\n  story: Story;\r\n}\r\n\r\nclass Lines extends React.Component<LinesProps> {\r\n  public render() {\r\n    const { nodeTracker, story } = this.props;\r\n\r\n    const lines = [\r\n      ...calcLinesFromNodes(nodeTracker, story),\r\n      ...calcLinesFromStoryOptions(nodeTracker, story)\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        {lines.map((line, index) => (\r\n          <Line {...line} key={`line-${index}`} position=\"absolute\" />\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lines;\r\n\r\ninterface LineType {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n\r\nconst calcLinesFromStoryOptions = (\r\n  nodeTracker: NodeTracker[],\r\n  story: Story\r\n): LineType[] =>\r\n  nodeTracker\r\n    .flatMap(trackedNode => {\r\n      const option = story.options.find(o => o.id === trackedNode.id);\r\n      if (option) {\r\n        const stuff = [];\r\n        if (option.tasteId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.tasteId, nodeTracker, trackedNode, 0)\r\n          );\r\n        }\r\n\r\n        if (option.touchId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.touchId, nodeTracker, trackedNode, 1)\r\n          );\r\n        }\r\n\r\n        if (option.smellId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.smellId, nodeTracker, trackedNode, 2)\r\n          );\r\n        }\r\n        if (option.lookId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.lookId, nodeTracker, trackedNode, 3)\r\n          );\r\n        }\r\n        if (option.listenId) {\r\n          stuff.push(\r\n            makeOptionalOptionLine(option.listenId, nodeTracker, trackedNode, 4)\r\n          );\r\n        }\r\n\r\n        return stuff;\r\n      }\r\n    })\r\n    .filter(n => n !== undefined) as any;\r\n\r\nconst makeOptionalOptionLine = (\r\n  id: string,\r\n  nodeTracker: NodeTracker[],\r\n  parentNodeTracker: NodeTracker,\r\n  index: number\r\n): LineType | undefined => {\r\n  const found = nodeTracker.find(n => n.id === id);\r\n  return found ? makeOptionLine(parentNodeTracker, found, index) : undefined;\r\n};\r\n\r\nconst calcLinesFromNodes = (\r\n  nodeTracker: NodeTracker[],\r\n  story: Story\r\n): LineType[] =>\r\n  nodeTracker\r\n    .flatMap(trackedNode => {\r\n      const node = story.nodes.find(n => n.id === trackedNode.id);\r\n      if (node) {\r\n        return what(nodeTracker, node, trackedNode);\r\n      }\r\n    })\r\n    .filter(n => n !== undefined) as any;\r\n\r\nconst what = (\r\n  nodeTracker: NodeTracker[],\r\n  node: Node,\r\n  trackedNode: NodeTracker\r\n): LineType[] => {\r\n  const options: NodeTracker[] = node.optionIds\r\n    .map(oid => nodeTracker.find(n => n.id === oid))\r\n    .filter(n => n !== undefined) as any;\r\n  return options.map(o => makeLine(trackedNode, o));\r\n};\r\n\r\nconst makeLine = (trackedNode: NodeTracker, trackedOption: NodeTracker) => ({\r\n  x1: trackedNode.x + trackedNode.width / 2,\r\n  y1: trackedNode.y + trackedNode.height,\r\n  x2: trackedOption.x + trackedOption.width / 2,\r\n  y2: trackedOption.y\r\n});\r\n\r\nconst makeOptionLine = (\r\n  trackedNode: NodeTracker,\r\n  trackedOption: NodeTracker,\r\n  index: number\r\n) => ({\r\n  x1: trackedNode.x + (index / 5) * trackedNode.width + 0.1 * trackedNode.width,\r\n  y1: trackedNode.y + trackedNode.height,\r\n  x2: trackedOption.x + trackedOption.width / 2,\r\n  y2: trackedOption.y\r\n});\r\n","import React, { FunctionComponent } from \"react\";\r\nimport Line from \"./Line\";\r\n\r\ninterface ConnectorArrowProps {\r\n  drawing: boolean;\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n\r\nconst ConnectorArrow: FunctionComponent<ConnectorArrowProps> = ({\r\n  drawing,\r\n  x1,\r\n  y1,\r\n  x2,\r\n  y2\r\n}) => (\r\n  <>{drawing && <Line position=\"absolute\" x1={x1} y1={y1} x2={x2} y2={y2} />}</>\r\n);\r\n\r\nexport default ConnectorArrow;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport {\r\n  Story,\r\n  Node,\r\n  StoryOption,\r\n  NodeTracker,\r\n  Verb,\r\n  LineCoordinates\r\n} from \"../types\";\r\nimport NodeComponent from \"./Node\";\r\nimport Option from \"./Option\";\r\n\r\nimport \"./graph.css\";\r\nimport Lines from \"./Lines\";\r\nimport ConnectorArrow from \"./ConnectorArrow\";\r\n\r\ninterface GraphTabProps {\r\n  story: Story;\r\n  nodeTrackers: NodeTracker[];\r\n  updateTitle(title: string): void;\r\n  updateNode(node: Node): void;\r\n  removeNode(node: Node): void;\r\n  removeOption(option: StoryOption): void;\r\n  addOption(nodeId: string): void;\r\n  addNode(option: StoryOption, verb: Verb): void;\r\n  updateOption(option: StoryOption): void;\r\n  connectToOption(node: Node, optionId: string): void;\r\n  drawLine(lineCoordinates: LineCoordinates): void;\r\n  stopDrawingLine(): void;\r\n  addOrUpdateNodeTracker(\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ): void;\r\n  lineCoordinates: LineCoordinates;\r\n  showLine: boolean;\r\n}\r\n\r\nconst GraphTab: FunctionComponent<GraphTabProps> = ({\r\n  story,\r\n  nodeTrackers,\r\n  updateTitle,\r\n  updateNode,\r\n  connectToOption,\r\n  updateOption,\r\n  addOrUpdateNodeTracker,\r\n  addOption,\r\n  removeOption,\r\n  addNode,\r\n  removeNode,\r\n  lineCoordinates,\r\n  showLine,\r\n  drawLine,\r\n  stopDrawingLine\r\n}) => (\r\n  <div>\r\n    <input\r\n      value={story.title}\r\n      className=\"title\"\r\n      placeholder=\"Title\"\r\n      onChange={event => updateTitle(event.target.value)}\r\n    />\r\n    {story.nodes.map((node, index) => (\r\n      <NodeComponent\r\n        key={node.id}\r\n        nodeTracker={nodeTrackers.find(n => n.id === node.id)}\r\n        nodeTrackers={nodeTrackers}\r\n        node={node}\r\n        addOption={addOption}\r\n        updateNode={updateNode}\r\n        removeNode={removeNode}\r\n        addOrUpdateNodeTracker={addOrUpdateNodeTracker}\r\n        connectToOption={connectToOption}\r\n        drawLine={drawLine}\r\n        stopDrawingLine={stopDrawingLine}\r\n        startNode={index === 0}\r\n      />\r\n    ))}\r\n\r\n    {story.options.map(option => (\r\n      <Option\r\n        option={option}\r\n        key={option.id}\r\n        updateOption={updateOption}\r\n        removeOption={removeOption}\r\n        addOrUpdateNodeTracker={addOrUpdateNodeTracker}\r\n        addNode={addNode}\r\n        nodeTrackers={nodeTrackers}\r\n      />\r\n    ))}\r\n    <Lines story={story} nodeTracker={nodeTrackers} />\r\n    <ConnectorArrow drawing={showLine} {...lineCoordinates} />\r\n  </div>\r\n);\r\n\r\nexport default GraphTab;\r\n","export const validate = (json: any) => {\r\n  validateString(json.title);\r\n  validateArray(json.nodes);\r\n  validateArray(json.options);\r\n\r\n  json.nodes.forEach(validateNode);\r\n  json.options.forEach(validateOption);\r\n\r\n  if (json.nodes.length === 0) {\r\n    throw new Error(\"Must be at least one node\");\r\n  }\r\n};\r\n\r\nconst validateNode = (node: any) => {\r\n  if (node === undefined || node === null) {\r\n    throw new Error(\"Missing node\");\r\n  }\r\n\r\n  validateString(node.id);\r\n  validateString(node.statement);\r\n\r\n  if (node.type !== \"Normal\" && node.type !== \"Win\" && node.type !== \"Death\") {\r\n    throw new Error(\"bad node type\");\r\n  }\r\n\r\n  validateArray(node.optionIds);\r\n\r\n  node.optionIds.forEach(validateString);\r\n};\r\n\r\nconst validateOption = (option: any) => {\r\n  validateString(option.id);\r\n  validateString(option.item);\r\n  validateStringOrUndefined(option.tasteId);\r\n  validateStringOrUndefined(option.touchId);\r\n  validateStringOrUndefined(option.smellId);\r\n  validateStringOrUndefined(option.lookId);\r\n  validateStringOrUndefined(option.listenId);\r\n};\r\n\r\nconst validateStringOrUndefined = (thing: any) => {\r\n  if (thing === undefined) {\r\n    return;\r\n  }\r\n  validateString(thing);\r\n};\r\nconst validateString = (thing: any) => {\r\n  if (typeof thing !== \"string\") {\r\n    throw new Error(\"not a string\");\r\n  }\r\n};\r\nconst validateArray = (thing: any) => {\r\n  if (!Array.isArray(thing)) {\r\n    throw new Error(\"not an array\");\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Story } from \"./types\";\r\nimport { validate } from \"./ValidateStoryJson\";\r\nimport classnames from \"classnames\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\ninterface JsonTabProps {\r\n  story: Story;\r\n  updateStory(story: Story): void;\r\n}\r\n\r\ninterface JsonTabState {\r\n  error: boolean;\r\n  updatedJson: string;\r\n  copied: boolean;\r\n}\r\n\r\nclass JsonTab extends React.Component<JsonTabProps, JsonTabState> {\r\n  constructor(props: JsonTabProps) {\r\n    super(props);\r\n    this.state = {\r\n      error: false,\r\n      updatedJson: JSON.stringify(props.story),\r\n      copied: false\r\n    };\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: JsonTabProps) {\r\n    if (prevProps.story !== this.props.story) {\r\n      this.setState({\r\n        error: false,\r\n        updatedJson: JSON.stringify(this.props.story)\r\n      });\r\n    }\r\n  }\r\n  private validateJson = (json: string) => {\r\n    this.setState({ updatedJson: json, error: false, copied: false });\r\n    try {\r\n      const parsedJson = JSON.parse(json);\r\n      validate(parsedJson);\r\n      this.props.updateStory(parsedJson);\r\n    } catch (e) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  private copy = () => {\r\n    navigator.clipboard.writeText(JSON.stringify(this.props.story));\r\n    this.setState({ copied: true });\r\n  };\r\n\r\n  private download = () => {\r\n    var blob = new Blob([JSON.stringify(this.props.story)], {\r\n      type: \"text/plain;charset=utf-8\"\r\n    });\r\n    saveAs(blob, \"story.json\");\r\n  };\r\n\r\n  public render() {\r\n    const { error, updatedJson, copied } = this.state;\r\n    return (\r\n      <div className=\"json-tab\">\r\n        <div className=\"json-top-bar\">\r\n          <p className=\"export-wrapper\">\r\n            <button onClick={this.download} className=\"json-button-export\">\r\n              <i className=\"fas fa-download\" />\r\n            </button>{\" \"}\r\n            <button onClick={this.copy} className=\"json-button-export\">\r\n              <i className=\"fas fa-copy\" />\r\n            </button>{\" \"}\r\n            {copied && \"Copied\"}\r\n          </p>\r\n          <p\r\n            className={classnames(\"valid-checker\", {\r\n              \"valid-checker--valid\": !error\r\n            })}\r\n          >\r\n            Valid {error && <i className=\"fas fa-times-circle\" />}\r\n            {!error && <i className=\"fas fa-check-circle\" />}\r\n          </p>\r\n        </div>\r\n        <div className=\"json-wrapper\">\r\n          <textarea\r\n            className=\"json--text-area\"\r\n            value={updatedJson}\r\n            onChange={e => this.validateJson(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JsonTab;\r\n","import { Story, Node, StoryOption, Verb } from \"./types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { update, without, uniq } from \"ramda\";\r\n\r\nexport const addNode = (\r\n  story: Story,\r\n  option: StoryOption,\r\n  verb: Verb\r\n): Story => {\r\n  const nodes = story.nodes;\r\n  const id = uuidv4();\r\n  const updatedNodes: Node[] = [\r\n    ...nodes,\r\n    { type: \"Normal\", statement: \"\", id, optionIds: [] }\r\n  ];\r\n\r\n  const optionIndex = story.options.findIndex(o => o.id === option.id);\r\n  const updatedOption: StoryOption = {\r\n    ...option,\r\n    ...(verb === \"taste\" && { tasteId: id }),\r\n    ...(verb === \"touch\" && { touchId: id }),\r\n    ...(verb === \"listen\" && { listenId: id }),\r\n    ...(verb === \"look\" && { lookId: id }),\r\n    ...(verb === \"smell\" && { smellId: id })\r\n  };\r\n\r\n  const options = update(optionIndex, updatedOption, story.options);\r\n\r\n  return { ...story, nodes: updatedNodes, options };\r\n};\r\n\r\nexport const removeNode = (story: Story, node: Node): Story => {\r\n  const updatedNodes = without([node], story.nodes);\r\n  const options = story.options.map(o => {\r\n    return {\r\n      ...o,\r\n      tasteId: clearOptionOfRemovedNode(node, o.tasteId),\r\n      touchId: clearOptionOfRemovedNode(node, o.touchId),\r\n      smellId: clearOptionOfRemovedNode(node, o.smellId),\r\n      listenId: clearOptionOfRemovedNode(node, o.listenId),\r\n      lookId: clearOptionOfRemovedNode(node, o.lookId)\r\n    };\r\n  });\r\n  return { ...story, nodes: updatedNodes, options };\r\n};\r\n\r\nexport const removeOption = (story: Story, option: StoryOption): Story => {\r\n  const options = without([option], story.options);\r\n  const nodes = story.nodes.map(n => ({\r\n    ...n,\r\n    optionIds: n.optionIds.filter(id => id !== option.id)\r\n  }));\r\n  return { ...story, nodes, options };\r\n};\r\n\r\nconst clearOptionOfRemovedNode = (node: Node, optionId: string | undefined) =>\r\n  optionId === node.id ? undefined : optionId;\r\n\r\nexport const addOption = (story: Story, nodeId: string): Story => {\r\n  const optionId = uuidv4();\r\n  const options = story.options;\r\n  const node = story.nodes.find(n => n.id === nodeId)!!; // TODO\r\n  const updatedNode = { ...node, optionIds: [...node.optionIds, optionId] };\r\n  const updatedOptions = [...options, { id: optionId, item: \"\" }];\r\n  return { ...updateNode(story, updatedNode), options: updatedOptions };\r\n};\r\n\r\nexport const updateNode = (story: Story, node: Node): Story => {\r\n  const nodes = story.nodes;\r\n  const nodeIndex = nodes.findIndex(n => n.id === node.id);\r\n  const updatedNodes = update(nodeIndex, node, nodes);\r\n  return { ...story, nodes: updatedNodes };\r\n};\r\n\r\nexport const updateOption = (story: Story, option: StoryOption): Story => {\r\n  const options = story.options;\r\n  const index = options.findIndex(o => o.id === option.id);\r\n  const updatedOptions = update(index, option, options);\r\n  return { ...story, options: updatedOptions };\r\n};\r\n\r\nexport const connectToOption = (story: Story, node: Node, optionId: string) => {\r\n  const updatedNode = {\r\n    ...node,\r\n    optionIds: uniq([...node.optionIds, optionId])\r\n  };\r\n\r\n  return { ...updateNode(story, updatedNode) };\r\n};\r\n","import { NodeTracker } from \"./types\";\r\n\r\nexport const removeNodeFromTracker = (\r\n  nodeTracker: NodeTracker[],\r\n  id: string\r\n): NodeTracker[] => nodeTracker.filter(n => n.id !== id);\r\n","export type NodeType = \"Normal\" | \"Win\" | \"Death\";\r\n\r\nexport interface Node {\r\n  id: string;\r\n  statement: string;\r\n  optionIds: string[];\r\n  type: NodeType;\r\n}\r\n\r\nexport interface StoryOption {\r\n  id: string;\r\n  item: string;\r\n  tasteId?: string;\r\n  touchId?: string;\r\n  smellId?: string;\r\n  lookId?: string;\r\n  listenId?: string;\r\n}\r\n\r\nexport interface Story {\r\n  title: string;\r\n  nodes: Node[];\r\n  options: StoryOption[];\r\n}\r\n\r\nexport type NodeTrackerType = \"Node\" | \"StoryOption\";\r\n\r\nexport interface NodeTracker {\r\n  id: string;\r\n  type: NodeTrackerType;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface LineCoordinates {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n}\r\n\r\nexport type Verb = \"taste\" | \"touch\" | \"smell\" | \"look\" | \"listen\";\r\nexport const VERBS: Verb[] = [\"taste\", \"touch\", \"smell\", \"look\", \"listen\"];\r\n","import { Story, Verb, VERBS, Node, StoryOption } from \"../types\";\r\nimport { head } from \"ramda\";\r\n\r\nclass Narrator {\r\n  constructor(private story: Story, private currentNode: Node) {}\r\n\r\n  public handleNonMatch = (response: string): string => {\r\n    if (response.includes(\"help\")) {\r\n      return \"Try interacting with an item e.g. touch bag or smell tomato.\";\r\n    }\r\n\r\n    if (response.includes(\"look around\")) {\r\n      return this.lookAroundDescription();\r\n    }\r\n\r\n    return \"You cannot do that. Maybe try asking to 'look around' if you are stuck.\";\r\n  };\r\n\r\n  public getNext = (response: string): Node | undefined => {\r\n    const words = response.split(\" \");\r\n\r\n    const verbOpt = this.findVerb(words);\r\n    const nounOpt = this.findNoun(words);\r\n\r\n    if (verbOpt !== undefined && nounOpt !== undefined) {\r\n      return this.handleMatch(verbOpt, nounOpt);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  private handleMatch = (verb: Verb, noun: StoryOption): Node | undefined => {\r\n    switch (verb) {\r\n      case \"listen\":\r\n        return this.findNounById(noun.listenId);\r\n      case \"look\":\r\n        return this.findNounById(noun.lookId);\r\n      case \"smell\":\r\n        return this.findNounById(noun.smellId);\r\n      case \"taste\":\r\n        return this.findNounById(noun.tasteId);\r\n      case \"touch\":\r\n        return this.findNounById(noun.touchId);\r\n    }\r\n  };\r\n\r\n  private findNounById = (id?: string) =>\r\n    this.story.nodes.find(n => n.id === id);\r\n\r\n  private stuffToDo = (): StoryOption[] =>\r\n    this.story.options.filter(option =>\r\n      this.currentNode.optionIds.includes(option.id)\r\n    );\r\n\r\n  private findVerb = (words: string[]): Verb | undefined =>\r\n    VERBS.find(verb => words.includes(verb));\r\n\r\n  private findNoun = (words: string[]): StoryOption | undefined =>\r\n    this.stuffToDo().find(s => words.includes(s.item));\r\n\r\n  private lookAroundDescription = (): string => {\r\n    const items = this.stuffToDo().map(\r\n      stuff => `${aOrAn(stuff.item)} ${stuff.item}`\r\n    );\r\n    if (items.length === 0) {\r\n      return \"There is nothing to look at.\";\r\n    }\r\n    return `You can see ${items.join(\" and \")}.`;\r\n  };\r\n}\r\n\r\nconst aOrAn = (word: string): string => {\r\n  const vowels = \"aeiou\";\r\n  const firstLetter = head(word);\r\n\r\n  if (vowels.includes(firstLetter)) {\r\n    return \"an\";\r\n  }\r\n  return \"a\";\r\n};\r\n\r\nexport default Narrator;\r\n","import React, { createRef, RefObject, Fragment } from \"react\";\r\nimport { Story, Node } from \"../types\";\r\nimport Narrator from \"./Narrator\";\r\nimport classnames from \"classnames\";\r\n\r\nimport \"./Chat.css\";\r\n\r\ninterface ChatProps {\r\n  story: Story;\r\n}\r\n\r\ninterface ChatState {\r\n  currentNode: Node;\r\n  response: string;\r\n  otherMessage?: string;\r\n  history: string[][];\r\n}\r\n\r\nclass Chat extends React.Component<ChatProps, ChatState> {\r\n  private historyRef: RefObject<HTMLDivElement> = createRef();\r\n\r\n  constructor(props: ChatProps) {\r\n    super(props);\r\n    this.state = {\r\n      currentNode: props.story.nodes[0],\r\n      response: \"\",\r\n      history: [[\"\", props.story.nodes[0].statement]]\r\n    };\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: ChatProps) {\r\n    if (prevProps.story !== this.props.story) {\r\n      this.setState({\r\n        currentNode: this.props.story.nodes[0],\r\n        response: \"\",\r\n        otherMessage: undefined,\r\n        history: [[\"\", this.props.story.nodes[0].statement]]\r\n      });\r\n    }\r\n  }\r\n\r\n  private enter = () => {\r\n    const narrator = new Narrator(this.props.story, this.state.currentNode);\r\n    const nextNode = narrator.getNext(this.state.response);\r\n\r\n    if (nextNode !== undefined) {\r\n      const history = [\r\n        ...this.state.history,\r\n        [this.state.response, nextNode.statement]\r\n      ];\r\n\r\n      this.setState({\r\n        currentNode: nextNode,\r\n        response: \"\",\r\n        history\r\n      });\r\n    } else {\r\n      const botResponse = narrator.handleNonMatch(this.state.response);\r\n      const history = [\r\n        ...this.state.history,\r\n        [this.state.response, botResponse]\r\n      ];\r\n\r\n      this.setState({ otherMessage: botResponse, response: \"\", history });\r\n    }\r\n    setTimeout(() => {\r\n      if (this.historyRef.current) {\r\n        this.historyRef.current.scrollTop = this.historyRef.current.scrollHeight;\r\n      }\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    const { story } = this.props;\r\n    const { response, history } = this.state;\r\n    return (\r\n      <div className=\"chat\">\r\n        <h1>{story.title}</h1>\r\n        <div className=\"history-book\">\r\n          <div className=\"history-book--inner\" ref={this.historyRef}>\r\n            {history.map(([humanStatement, botStatement], i) => (\r\n              <Fragment key={`history--${i}`}>\r\n                <p className=\"human-statement\">{humanStatement}</p>\r\n                <p\r\n                  className={classnames(\"bot-statement\", {\r\n                    \"current-node\": i + 1 === history.length\r\n                  })}\r\n                >\r\n                  {botStatement === \"\"\r\n                    ? \"There is no text inputted on this node, please update the story!\"\r\n                    : botStatement}\r\n                </p>\r\n              </Fragment>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <input\r\n          value={response}\r\n          placeholder=\"Type a command e.g. look at book\"\r\n          className=\"chat--input\"\r\n          onChange={e =>\r\n            this.setState({ response: e.target.value, otherMessage: \"\" })\r\n          }\r\n          onKeyDown={e => (e.key === \"Enter\" ? this.enter() : undefined)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport classnames from \"classnames\";\r\nexport type Tab = \"graph\" | \"json\" | \"chat\" | \"info\";\r\n\r\ninterface SwitcherProps {\r\n  update(tab: Tab): void;\r\n  tab: Tab;\r\n  icon: string;\r\n  currentTab: Tab;\r\n}\r\nconst Switcher: FunctionComponent<SwitcherProps> = ({\r\n  update,\r\n  tab,\r\n  icon,\r\n  currentTab\r\n}) => (\r\n  <button\r\n    className={classnames(\"switcher\", {\r\n      \"switcher--selected\": tab === currentTab\r\n    })}\r\n    title=\"info\"\r\n    onClick={() => update(tab)}\r\n  >\r\n    <i className={icon} />\r\n  </button>\r\n);\r\n\r\nexport default Switcher;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  Story,\r\n  Node,\r\n  StoryOption,\r\n  NodeTracker,\r\n  Verb,\r\n  LineCoordinates\r\n} from \"./types\";\r\nimport GraphTab from \"./graph/GraphTab\";\r\nimport JsonTab from \"./JsonTab\";\r\nimport { update } from \"ramda\";\r\nimport {\r\n  addNode,\r\n  updateNode,\r\n  addOption,\r\n  updateOption,\r\n  removeNode,\r\n  removeOption,\r\n  connectToOption\r\n} from \"./StoryUpdater\";\r\nimport { removeNodeFromTracker } from \"./NodeTrackerHelper\";\r\nimport Chat from \"./chat/Chat\";\r\nimport Switcher, { Tab } from \"./Switcher\";\r\nimport { validate } from \"./ValidateStoryJson\";\r\n\r\ninterface AppState {\r\n  tab: Tab;\r\n  story: Story;\r\n  nodeTracker: NodeTracker[];\r\n  showLine: boolean;\r\n  lineCoordinates: {\r\n    x1: number;\r\n    y1: number;\r\n    x2: number;\r\n    y2: number;\r\n  };\r\n}\r\n\r\nconst firstNodeId = \"first-node\";\r\nconst initState: AppState = {\r\n  tab: \"graph\",\r\n  story: {\r\n    title: \"\",\r\n    nodes: [{ statement: \"\", type: \"Normal\", optionIds: [], id: firstNodeId }],\r\n    options: []\r\n  },\r\n  nodeTracker: [],\r\n  showLine: false,\r\n  lineCoordinates: { x1: 0, y1: 0, x2: 0, y2: 0 }\r\n};\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n  public state: AppState = initState;\r\n\r\n  private updateTab = (tab: Tab) => this.setState({ tab });\r\n  private updateTitle = (title: string) =>\r\n    this.setState({ story: { ...this.state.story, title } });\r\n  private updateNode = (node: Node) => {\r\n    this.setState({ story: updateNode(this.state.story, node) });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const story = localStorage.getItem(\"story\");\r\n\r\n    if (story) {\r\n      try {\r\n        const parsedJson = JSON.parse(story);\r\n        validate(parsedJson.story);\r\n        this.setState(parsedJson);\r\n      } catch (e) {\r\n        console.log(\"could not parse story in local storage\");\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\"story\", JSON.stringify(this.state));\r\n  }\r\n\r\n  private addOrUpdateNodeTracker = (\r\n    id: string,\r\n    type: \"Node\" | \"StoryOption\",\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ) => {\r\n    const { nodeTracker } = this.state;\r\n    const index = nodeTracker.findIndex(n => n.id === id);\r\n    const node = { id, x, y, type, width, height };\r\n    if (index === -1) {\r\n      this.setState({ nodeTracker: [...nodeTracker, node] });\r\n    } else {\r\n      this.setState({ nodeTracker: update(index, node, nodeTracker) });\r\n    }\r\n  };\r\n\r\n  private addNode = (option: StoryOption, verb: Verb) => {\r\n    this.setState({ story: addNode(this.state.story, option, verb) });\r\n  };\r\n\r\n  private removeNode = (node: Node) => {\r\n    this.setState({\r\n      story: removeNode(this.state.story, node),\r\n      nodeTracker: removeNodeFromTracker(this.state.nodeTracker, node.id)\r\n    });\r\n  };\r\n\r\n  private removeOption = (option: StoryOption) => {\r\n    this.setState({\r\n      story: removeOption(this.state.story, option),\r\n      nodeTracker: removeNodeFromTracker(this.state.nodeTracker, option.id)\r\n    });\r\n  };\r\n  private addOption = (nodeId: string) => {\r\n    this.updateStory(addOption(this.state.story, nodeId));\r\n  };\r\n\r\n  private updateOption = (option: StoryOption) => {\r\n    this.updateStory(updateOption(this.state.story, option));\r\n  };\r\n\r\n  private updateStory = (story: Story) => this.setState({ story });\r\n\r\n  private connectToOption = (node: Node, optionId: string) => {\r\n    this.updateStory(connectToOption(this.state.story, node, optionId));\r\n  };\r\n\r\n  private drawLine = (lineCoordinates: LineCoordinates) =>\r\n    this.setState({ showLine: true, lineCoordinates });\r\n  private stopDrawingLine = () => this.setState({ showLine: false });\r\n\r\n  private reset = () => {\r\n    if (window.confirm(\"Are you sure you want to start again?\")) {\r\n      const firstTrackedNode = this.state.nodeTracker.find(\r\n        n => n.id === firstNodeId\r\n      );\r\n      this.setState({\r\n        ...initState,\r\n        nodeTracker: firstTrackedNode ? [firstTrackedNode] : []\r\n      });\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const { tab, story, nodeTracker, showLine, lineCoordinates } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"navbar\">\r\n          <div className=\"tab-switcher\">\r\n            <Switcher\r\n              tab=\"graph\"\r\n              update={this.updateTab}\r\n              icon=\"fas fa-sitemap\"\r\n              currentTab={tab}\r\n            />\r\n            <Switcher\r\n              tab=\"json\"\r\n              update={this.updateTab}\r\n              icon=\"far fa-file\"\r\n              currentTab={tab}\r\n            />\r\n            <Switcher\r\n              tab=\"chat\"\r\n              update={this.updateTab}\r\n              icon=\"fas fa-robot\"\r\n              currentTab={tab}\r\n            />\r\n            <Switcher\r\n              tab=\"info\"\r\n              update={this.updateTab}\r\n              icon=\"fas fa-info\"\r\n              currentTab={tab}\r\n            />\r\n          </div>\r\n          <button className=\"reset\" title=\"reset\" onClick={this.reset}>\r\n            <i className=\"fas fa-undo-alt\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className={tab === \"graph\" ? \"\" : \"tab--hidden\"}>\r\n          <GraphTab\r\n            story={story}\r\n            nodeTrackers={nodeTracker}\r\n            updateTitle={this.updateTitle}\r\n            updateNode={this.updateNode}\r\n            removeNode={this.removeNode}\r\n            removeOption={this.removeOption}\r\n            addOption={this.addOption}\r\n            addNode={this.addNode}\r\n            updateOption={this.updateOption}\r\n            connectToOption={this.connectToOption}\r\n            addOrUpdateNodeTracker={this.addOrUpdateNodeTracker}\r\n            showLine={showLine}\r\n            lineCoordinates={lineCoordinates}\r\n            drawLine={this.drawLine}\r\n            stopDrawingLine={this.stopDrawingLine}\r\n          />\r\n        </div>\r\n        <div className={tab === \"json\" ? \"\" : \"tab--hidden\"}>\r\n          <JsonTab story={story} updateStory={this.updateStory} />\r\n        </div>\r\n        <div className={tab === \"chat\" ? \"\" : \"tab--hidden\"}>\r\n          <Chat story={story} />\r\n        </div>\r\n        <div className={tab === \"info\" ? \"\" : \"tab--hidden\"}>\r\n          <h1>text adventure creator</h1>\r\n          <p>Create your own text adventure using the graph tab or json tab.</p>\r\n          <p>Test out in bot tab.</p>\r\n          <p>Export by copying/downloading json.</p>\r\n          <div>\r\n            <a\r\n              className=\"link\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://github.com/majicmoo/storytime-slackbot\"\r\n            >\r\n              <i className=\"fab fa-github\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}